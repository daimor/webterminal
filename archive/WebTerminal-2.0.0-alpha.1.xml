<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="%WebTerminal.Engine">
<Description>
This class represents the core of web terminal.
All operations with opened WebSocket placed here.

WARNING! Application under development. Security is not guaranteed.
</Description>
<Super>%CSP.WebSocket,%Library.Routine</Super>
<TimeCreated>63047,60359.445979</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// USER CONSTANTS BEGIN

]]></Content>
</UDLText>

<Parameter name="authorizationTimeout">
<Description>
How long to wait for authorization key when connection established</Description>
<Default>5</Default>
</Parameter>

<UDLText name="T">
<Content><![CDATA[
// USER CONSTANTS END

]]></Content>
</UDLText>

<Property name="SharedConnection">
<Description><![CDATA[
This property determines whether the communication between the client and WebSocket server should be over a dedicated Gateway
connection or over a pool of shared connections.  It may be set to one of the following:
<br><ul>
<li><b>SharedConnection=0</b> - The WebSocket server communicates with the client via a dedicated Gateway connection. In this mode of operation the hosting connection is effectively 'private' to the application session.</li>
<li><b>SharedConnection=1</b> - The WebSocket server communicates asynchronously with the client via a fixed number of shared Gateway connections.</li>
</ul>]]></Description>
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="lastClientId">
<Description>
Last joined client id</Description>
<Type>%Numeric</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="ConstServerActionExecute">
<Type>%Char</Type>
<InitialExpression>"EXEC"</InitialExpression>
</Property>

<Property name="ConstServerActionExecuteSQL">
<Type>%Char</Type>
<InitialExpression>"SQL"</InitialExpression>
</Property>

<Property name="ConstServerActionGenerateAutocomplete">
<Type>%Char</Type>
<InitialExpression>"AC"</InitialExpression>
</Property>

<Property name="ConstServerActionTrace">
<Type>%Char</Type>
<InitialExpression>"TRACE"</InitialExpression>
</Property>

<Property name="ConstServerActionStopTraceAll">
<Type>%Char</Type>
<InitialExpression>"STOP_TRACE_ALL"</InitialExpression>
</Property>

<Property name="ConstServerActionCheckTrace">
<Type>%Char</Type>
<InitialExpression>"CT"</InitialExpression>
</Property>

<Property name="ConstServerActionReset">
<Type>%Char</Type>
<InitialExpression>"R"</InitialExpression>
</Property>

<Property name="ConstServerActionEcho">
<Type>%Char</Type>
<InitialExpression>"E"</InitialExpression>
</Property>

<Property name="ConstServerActionCheckUpdate">
<Type>%Char</Type>
<InitialExpression>"CU"</InitialExpression>
</Property>

<Property name="ConstServerActionUpdate">
<Type>%Char</Type>
<InitialExpression>"U"</InitialExpression>
</Property>

<Parameter name="ConstServerActionExecuteStack">
<Expression>$c(8)</Expression>
</Parameter>

<UDLText name="T">
<Content><![CDATA[
// ?

]]></Content>
</UDLText>

<Property name="ConstClientPrompt">
<Type>%String</Type>
<InitialExpression>"PROMPT#"</InitialExpression>
</Property>

<Property name="ConstClientStartExec">
<Type>%String</Type>
<InitialExpression>"EST#"</InitialExpression>
</Property>

<Property name="ConstClientEndExec">
<Type>%String</Type>
<InitialExpression>"END#"</InitialExpression>
</Property>

<Property name="ConstClientOutputMessage">
<Type>%String</Type>
<InitialExpression>"O#"</InitialExpression>
</Property>

<Property name="ConstClientChangeNamespace">
<Type>%String</Type>
<InitialExpression>"NS#"</InitialExpression>
</Property>

<Property name="ConstClientLoadAutocomplete">
<Type>%String</Type>
<InitialExpression>"AC#"</InitialExpression>
</Property>

<Property name="ConstClientReadString">
<Type>%String</Type>
<InitialExpression>"R#"</InitialExpression>
</Property>

<Property name="ConstClientReadChar">
<Type>%String</Type>
<InitialExpression>"RC#"</InitialExpression>
</Property>

<Property name="ConstClientAuthorizationStatus">
<Type>%String</Type>
<InitialExpression>"AUTH#"</InitialExpression>
</Property>

<Property name="ConstClientTrace">
<Type>%String</Type>
<InitialExpression>"TRACE#"</InitialExpression>
</Property>

<Property name="ConstClientStopTrace">
<Type>%String</Type>
<InitialExpression>"STOP_TRACE#"</InitialExpression>
</Property>

<Property name="ConstClientLoginInfo">
<Type>%String</Type>
<InitialExpression>"I#"</InitialExpression>
</Property>

<Property name="ConstClientClearScreen">
<Type>%String</Type>
<InitialExpression>"CLRSCR#"</InitialExpression>
</Property>

<Property name="ConstClientPromptUpdate">
<Type>%String</Type>
<InitialExpression>"PROMPT_UPDATE#"</InitialExpression>
</Property>

<Property name="CurrentNamespace">
<Type>%String</Type>
</Property>

<Property name="InitialZName">
<Type>%String</Type>
</Property>

<Property name="InitialZNamespace">
<Type>%String</Type>
</Property>

<Property name="Watches">
<Description>
Property is used to store watching files/globals. </Description>
<Type>%List</Type>
</Property>

<Property name="WatchesCaret">
<Description>
Watch position in file on global</Description>
<Type>%Numeric</Type>
<MultiDimensional>1</MultiDimensional>
</Property>

<Method name="redirects">
<Description>
Public point entries, using when redirecting i/o</Description>
<Private>1</Private>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
PrepareOutput(data)
    Try { Set data=$zconvert(data, "O", "UTF8") } Catch {  }
    quit data
    
PrepareInput(data)
    Try { Set data=$zconvert(data, "I", "UTF8") } Catch {  }
    quit data
    
/// Routine from %CSP.WebSocket.cls
ReadMessage(len = 32656, timeout = 86400, BytesAvailable, AtEnd, data, data1, header, size, type)
    Set $ZTrap="ReadError"
    If len<1 Set len=32656
    //If (..SharedConnection = 1) {
    //    Set data=..ReadAsync(.len, .sc, timeout)
    //    Try { Set data1=$zconvert(data,"I","UTF8") } Catch { Set data1=data }
    //    Set len=$Length(data1)
    //    Quit data1
    //}
    Set BytesAvailable=0, AtEnd=0
    Read header#5:timeout
    If $Test=0 {
        Set len=0
        //Set sc=$$$ERROR($$$CSPWebSocketTimeout, "WebSocket Read Operation timed-out")
        Set AtEnd=1
        Quit ""
    }
    Set type=$Extract(header,5)
    If type=9 {
        Set len=0
        //Set sc=$$$ERROR($$$CSPWebSocketClosed,"WebSocket Closed by the Client")
        Set AtEnd=1
        Quit ""
    }
    Set header=$Extract(header, 1, 4)
    Set size=$ZLA(header)-1 If size<0 Set size=0
    Set BytesAvailable=size
ReadData
    If BytesAvailable > len {
        Set size=len
        Set BytesAvailable=BytesAvailable-len
    }
    else {
        Set size=BytesAvailable
        Set BytesAvailable=0
    }
    If 'BytesAvailable Set AtEnd=1
    If size=0 Set len=0 Quit ""
    Read data#size
    Set len=size
    //Set sc=$$$OK
    Try { Set data1=$zconvert(data,"I","UTF8") } Catch { Set data1=data }
    Set len=$Length(data1)
    Quit data1
ReadError   
    #; No interrupts during cleanup or error processing
    $$$SetExternalInterrupts(0)
    Set $ZTrap="ReadHalt"
    Hang 5
    Close 0
ReadHalt
    Halt
    
/// Workaround for Cach√© 2015 (+ filtering <= 2014 on client)
WriteMessage(data, data1, head)
    try { Set data1 = $zconvert(data, "O", "UTF8") } Catch { Set data1 = data }
    set head = $ZLChar($Length(data1))
    set head = head _ "7"
    write head _ data1, *-3
    quit
    
//////////////////////////////////////////////

wstr(s)
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("O#"_s)
    do ##class(%Device).ReDirectIO($$$YES)
    quit

wchr(c) 
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("O#"_$c(c))
    do ##class(%Device).ReDirectIO($$$YES)
    quit

wnl 
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("O#"_$c(13, 10))
    do ##class(%Device).ReDirectIO($$$YES)
    quit

wff 
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("CLRSCR#")
    do ##class(%Device).ReDirectIO($$$YES)
    quit
    
wtab(s)
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("O#" _ $C(27) _ "[" _ (s + 1) _ "G")
    do ##class(%Device).ReDirectIO($$$YES)
    quit
    
rstr(len = 32656, timeout = 86400, data)
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("R#" _ len)
    s data = $$ReadMessage(len, timeout)
    do ##class(%Device).ReDirectIO($$$YES)
    quit data
    
rchr(timeout = 86400, data)
    do ##class(%Device).ReDirectIO($$$NO)
    do WriteMessage("RC#")
    set data = $$ReadMessage(1, timeout)
    set data = $ASCII($EXTRACT(data,1,1))
    do ##class(%Device).ReDirectIO($$$YES)
    quit data
]]></Implementation>
</Method>

<Method name="OnPreServer">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ..InitialZName = $zname
    set ..InitialZNamespace = $znspace
    quit $$$OK
]]></Implementation>
</Method>

<Method name="Trace">
<Description>
Chechs for correct watch source and sets watch target to ..Watches
Returns status of this operation</Description>
<FormalSpec>name</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set s = $CHAR(0)
    set watches = s _ $LISTTOSTRING(..Watches, s) _ s
    if ($FIND(watches, s_name_s) '= 0) q 0 // if watch already defined
    
    if ($EXTRACT(name,1,1) = "^") { // watching global
        s g = 0
        try {
            if (($data(@name))'=0) s g = 1
        } catch {  }
        set $ZERROR = ""
        if (g = 1) {
            set ..Watches = ..Watches _ $LISTBUILD(name)
            set ..WatchesCaret(name,0) = $QUERY(@name@(""),-1) // last
            set ..WatchesCaret(name,1) = "?"
            do ..SendData(name, ..ConstClientTrace)
            q 1
        }
    } else { // watch file
        if (##class(%File).Exists(name)) {
            set ..Watches = ..Watches _ $LISTBUILD(name)
            set file = ##class(%File).%New(name)
            set ..WatchesCaret(name,0) = file.Size // current watch cursor position
            set ..WatchesCaret(name,1) = file.DateModified
            do ..SendData(name, ..ConstClientTrace)
            q 1
        }
    }
    
    q 0
]]></Implementation>
</Method>

<Method name="StopTracing">
<Description>
Removes watch from watches list
Returns success status</Description>
<FormalSpec>name</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // absurdly, but working
    set s = $CHAR(0)
    set watches = s _ $LISTTOSTRING(..Watches,s) _ s
    set newWatches = $REPLACE(watches, s_name_s, s)
    set ..Watches = $LISTFROMSTRING($EXTRACT(newWatches, 2, *-1), s)
    if (watches '= newWatches) {
        k ..WatchesCaret(name) // really removed
        do ..SendData(name, ..ConstClientStopTrace)
    }
    quit watches '= newWatches
]]></Implementation>
</Method>

<Method name="ListWatches">
<Description>
Returns a list current watches</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set no=0
    set s = "Watching: " _ $CHAR(10)
    while $LISTNEXT(..Watches, no, value) {
        set s = s_"(pos: "_..WatchesCaret(value,0)_
        "; mod: "_..WatchesCaret(value,1)_") "_value_$CHAR(10)
    }
    q s
]]></Implementation>
</Method>

<Method name="GetTraceGlobalModified">
<Description>
Return null string if global hadn't been updated
This method watches only for tail of global and detects if global still alive</Description>
<FormalSpec>watch</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set data = ""
    if ($data(@watch)=0) {
        do ..StopTracing(watch)
        q "removed"
    }
    for {
        set query = $QUERY(@..WatchesCaret(watch,0))
        quit:query=""
        if (data="") set data = "modified"
        set ..WatchesCaret(watch,0) = query
        set data = data _ $CHAR(13, 10) _ @query
    }
    q data
]]></Implementation>
</Method>

<Method name="GetTraceFileModified">
<FormalSpec>watch</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set file=##class(%File).%New(watch)
    set size = file.Size
    set modDate = file.DateModified
    set output = ""
    if (size < 0) { // file had been deleted
         
        do ..StopTracing(watch)
        q "removed"
        
    }
    if (size > ..WatchesCaret(watch, 0)) {
        
        set output = "updated" _ $CHAR(13, 10)
        set stream=##class(%Stream.FileBinary).%New()
        set sc=stream.LinkToFile(watch)
        do stream.MoveTo(..WatchesCaret(watch, 0) + 1)
        set readed = stream.Read(size - ..WatchesCaret(watch, 0))
        set output=output_readed
        set ..WatchesCaret(watch, 0) = size
        set ..WatchesCaret(watch, 1) = file.DateModified
        
    } elseif ((size < ..WatchesCaret(watch, 0)) || (file.DateModified '= ..WatchesCaret(watch, 1))) {
        
        set output = "modified" _ $CHAR(13, 10)
        set output = output _ "Bytes changed: " _ (size - ..WatchesCaret(watch, 0))
        set ..WatchesCaret(watch, 0) = size
        set ..WatchesCaret(watch, 1) = file.DateModified
        
    } // else file not changed
    q output
]]></Implementation>
</Method>

<Method name="CheckTracing">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set no = 0
    set data = ""
    set overal = ""
    set watchList = ..Watches // do not remove or simplify: ..Watches can be modified
    while $LISTNEXT(watchList, no, value) {
        if ($EXTRACT(value, 1, 1) = "^") {
            set data = ..GetTraceGlobalModified(value)
        } else {
            set data = ..GetTraceFileModified(value)
        }
        if (data '= "") {
            set overal = $ZDATETIME($NOW(),1,1) _ " " _
            value _ ": " _ data _ $CHAR(10) 
        }
        set data = ""
    }
    q overal
]]></Implementation>
</Method>

<Method name="OnPostServer">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    kill ^CacheTemp.WebTerminal.Watching
    quit $$$OK
]]></Implementation>
</Method>

<Method name="GetJSAutocompleteFilePath">
<ClassMethod>1</ClassMethod>
<FormalSpec>namespace:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
    set data = ##class(%Library.File).ManagerDirectory()
    set data = ##class(%Library.File).ParentDirectoryName(data)
    
    set dataTest = ##class(%Library.File).SubDirectoryName(data, "CSP")
    if (##class(%Library.File).DirectoryExists(dataTest)) {
        set data = ##class(%Library.File).SubDirectoryName(data, "CSP")
    } else {
        set data = ##class(%Library.File).SubDirectoryName(data, "csp")
    }
    
    set data = ##class(%Library.File).SubDirectoryName(data,
        $ZCONVERT($REPLACE(namespace,"%",""),"l")
    )
    set data = ##class(%Library.File).SubDirectoryName(data, "WebTerminal")
    set data = ##class(%Library.File).SubDirectoryName(data, "js")
    set data = ##class(%Library.File).SubDirectoryName(data, "autocomplete")
    set data = ##class(%Library.File).SubDirectoryName(data, 
        //$REPLACE(namespace,"%","_") _ ".js"
        namespace _ ".js"
    )
    
    //set data = data _ "CSP\sys\webTerminal\js\autocomplete\" _
    //  $REPLACE(namespace,"%","_") _ ".js" // UNIX?
    //set data = data _ $REPLACE(namespace,"%","_") _ ".js"
    
    quit data
]]></Implementation>
</Method>

<Method name="WriteToFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String,data:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set file=##class(%File).%New(filename)
    do file.Open("WSN")
    do file.WriteLine(data)
    do file.Close()
]]></Implementation>
</Method>

<Method name="getGlobalsJSON">
<ClassMethod>1</ClassMethod>
<FormalSpec>namespace:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

    set out = "{"
    set rset=##class(%ResultSet).%New("%SYS.GlobalQuery:NameSpaceList")
    set sc=rset.Execute($ZNSPACE,"*",0)
    while (rset.Next()) {
        set out = out _ """" _ $Piece(rset.GetData(1),"(",1) _ """:0,"
    }
    set out = $EXTRACT(out,1,$LENGTH(out)-1) _ "}"
    q out
]]></Implementation>
</Method>

<Method name="GenerateAutocompleteFile">
<Description>
Generates autocomplete file for namespace. Second parameter de—Åides if
it will be regenerated again. But if namespace equals to "%" - generates
autocomplete file for system classes. Make sure that autocomplete for
system classes generates one time and forever. </Description>
<FormalSpec>namespace:%String,newFile:%Boolean</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
    set filename = ..GetJSAutocompleteFilePath(..InitialZNamespace)
    
    //set system = 0
    //if (namespace = "%") {
    //    set namespace = "%SYS"
    //    set filename = ..GetJSAutocompleteFilePath("_")
    //    set system = 1
    //}
    
    //if (system) && (##class(%File).Exists(filename)) {
    //    do ..SendData("_", ..ConstClientLoadAutocomplete)
    //    quit $$$OK
    //}
    
    do ..StartClearIO()
    
    w "Start generating file ", filename, !
    
    if ('##class(%SYS.Namespace).Exists(namespace)) {
        do ..EndClearIO()
        do ..SendData("Wrong namespace: " _ namespace _ $C(13,10))
        quit $$$NOTOK
    }
    
    //set namespace = $REPLACE(namespace,"%","_")
    
    /*if (##class(%File).Exists(filename)) && (newFile = 0) {
        
        w "File exists, exiting..."
        do ..EndClearIO()
        do ..SendData(namespace, ..ConstClientLoadAutocomplete)
        quit $$$OK
        
    } else*/if ('##class(%File).DirectoryExists(##class(%File).GetDirectory(filename))) {
        
        // try to create missed directory
        set result = ##class(%File).CreateDirectoryChain(##class(%File).GetDirectory(filename))
        
        if (result '= 1) {
            w "Unable to create directory js/autocomplete.", !
            do ..EndClearIO()
            quit $$$OK
        }
        
    }

    //set thisName = $REPLACE(namespace,"_","%")
    //if (system) { set thisName = "SYSTEM" }
    //do ..SendData("Generating language file for " _ thisName _ ", pleace, wait. ")
        
    // get all classes names
    set result = ##class(%ResultSet).%New("%Dictionary.ClassDefinition:Summary")
    do result.Execute()
    
    /*  
    The next COULD BE IMPROVED FOR SPEED, I beleive.
    Generates compressed JSON string of type:
    {
        "class": {
            "%ClassName1": {
                "methodName": 0,
                "propertyName": 0,
                "parameterName": 0,
                ...
            },
            "ClassName2": {
                ...
            }
        },
        "global": {
            "^%g1": 0,
            "^g2": 0
        }
    }
    */
    
    w $C(13, 10), "Classes scanned:"
    
    set file=##class(%File).%New(filename)
    do file.Open("WSN")
    
    // final data generation
    do file.Write("{""class"":{")
    set first = ""
    set u = 1
    
    while (result.Next()) { // forming autocomplete for each class
    
        w $C(27), "[20G", u
        s u = u + 1
    
        set className = result.Data("Name")
        //if (($EXTRACT(className,1)="%")'=system) {
        //    continue
        //}
        do file.Write(first _ """" _ className _ """:{")
        if (first = "") set first = ","
        
        set cdefs = ##class(%Dictionary.ClassDefinition).%OpenId(className)
        
        set countMethods = cdefs.Methods.Count()
        set countParameters = cdefs.Parameters.Count()
        set countProperties = cdefs.Properties.Count()
        set total = countMethods + countParameters + countProperties
        set current = 0
        
        for i=1:1:countMethods {
            set current = current + 1
            do file.Write("""" _ cdefs.Methods.GetAt(i).Name _ """:0")
            if (current'=total) do file.Write(",")
        }
        
        for i=1:1:countProperties {
            set current = current + 1
            do file.Write("""" _ cdefs.Properties.GetAt(i).Name _ """:0")
            if (current'=total) do file.Write(",")
        }
        
        for i=1:1:countParameters {
            set current = current + 1
            do file.Write("""" _ cdefs.Parameters.GetAt(i).Name _ """:0")
            if (current'=total) do file.Write(",")
        }
        
        do file.Write("}")
        
    }
    
    do file.Write("}")
    //if ('system) {
        do file.Write(",""global"":" _ ..getGlobalsJSON())  
    //}
    do file.Write("}")
    do file.Close()
    
    w !, "Language file for " _ namespace _ " generated.", !
    
    do ..EndClearIO()
    
    //if (system) {
    //    do ..SendData("_", ..ConstClientLoadAutocomplete)
    do ..SendData(namespace, ..ConstClientLoadAutocomplete)
    
    quit $$$OK
]]></Implementation>
</Method>

<Method name="GenerateAuthKey">
<Description>
Generating new authorization key</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    set ^|"%SYS"|%WebTerminal.AuthKey = $SYSTEM.Util.CreateGUID()
]]></Implementation>
</Method>

<Method name="GetAuthKey">
<Description>
Returns key for client authorization.
If the key is empty, generates new key value.</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    if ($get(^|"%SYS"|%WebTerminal.AuthKey) = "") {
        Do ..GenerateAuthKey()
    }
    quit ^|"%SYS"|%WebTerminal.AuthKey
]]></Implementation>
</Method>

<Method name="Reset">
<Description>
Returns terminal to default state</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // delete autocompletion files
    set dir = ##class(%File).GetDirectory(..GetJSAutocompleteFilePath("TEST"))
    if (##class(%File).DirectoryExists(dir)) {
        do ##class(%File).RemoveDirectoryTree(dir)
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="SendData">
<Description>
Function sends data derectly to server with specified action</Description>
<FormalSpec>query:%String="",action:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    if (action = "") { set action = ..ConstClientOutputMessage }
    do ..Write(action _ query) // using CTWPv3
]]></Implementation>
</Method>

<Method name="ExecuteSQL">
<FormalSpec>query:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    do ..StartClearIO()
    do ##class(%Device).ReDirectIO($$$YES)
    
    set tStatement = ##class(%SQL.Statement).%New()
    set qStatus = tStatement.%Prepare(query)
    if qStatus'=1 {
        write "SQL prepare error: ",$System.Status.DisplayError(qStatus)
    } else {
        set rset = tStatement.%Execute()
        do rset.%Display()
    }
    
    do ##class(%Device).ReDirectIO($$$NO)
    do ..EndClearIO()
    
    quit $$$OK
]]></Implementation>
</Method>

<Method name="ClientAlertNamespace">
<Description>
Sends to client new namespace if last was changed</Description>
<Implementation><![CDATA[
    if (..CurrentNamespace '= $Znspace) { // change client namespace
        set ..CurrentNamespace = $Znspace
        do ..SendData(..CurrentNamespace,..ConstClientChangeNamespace) 
    }
]]></Implementation>
</Method>

<Method name="StartClearIO">
<Description>
Starts clear I/O mode</Description>
<Implementation><![CDATA[
    write *-3
    do ..Write(..ConstClientStartExec)
    write *-3
    do ##class(%Device).ReDirectIO($$$YES)
]]></Implementation>
</Method>

<Method name="EndClearIO">
<Description>
Ends clear I/O mode</Description>
<Implementation><![CDATA[
    //write *-3
    do ##class(%Device).ReDirectIO($$$NO)
    do ..SendData("",..ConstClientEndExec)
    write *-3
]]></Implementation>
</Method>

<Method name="ParseError">
<Description>
This method transforms error </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>string:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set string = $REPLACE($REPLACE(string, ">", "<"), ".Engine.", "<")
    quit "ERROR: " _ $PIECE(string, "<", 2) _
        $EXTRACT($PIECE(string, "<", 4), 2, *)
]]></Implementation>
</Method>

<Method name="Update">
<FormalSpec>version</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set httprequest = ##class(%Net.HttpRequest).%New()
    set httprequest.Server = "intersystems-ru.github.io"
    do ..SendData("Requesting http://intersystems-ru.github.io/webterminal/files/WebTerminal-"
        _ version _ ".xml file... ")
    do httprequest.Get("/webterminal/files/WebTerminal-" _ version _ ".xml") // TODO: handle 404
    if (httprequest.HttpResponse.StatusCode '= 200) {
        do ..SendData($C(27)_"[31mFAIL" _ $C(27) _ "[0m (status code "
            _ httprequest.HttpResponse.StatusCode _ ")" _ $C(13,10))
        quit $$$NOTOK
    }
    if ($isobject(httprequest.HttpResponse.Data)) {
        do ..SendData($C(13,10))
        set data = ""
        set path = ##class(%Library.File).SubDirectoryName(
            ##class(%Library.File).ManagerDirectory(), "temp"
        )
        set filepath = ##class(%Library.File).SubDirectoryName(
            path, "terminal_update.temp.xml"
        )
        do ..SendData("Reading file..." _ $C(13,10))
        set file = ##class(%File).%New(filepath)
        do file.Open("WSN")
        while (httprequest.HttpResponse.Data.AtEnd = 0) {
            do file.Write(httprequest.HttpResponse.Data.Read())
        }
        do file.Close()
        do ..SendData("Importing and compilling new files..." _ $C(13,10))
        set error = 0
        do $System.OBJ.ImportDir(path, "terminal_update.temp.xml", "ckbu", .error, 1)
        w *-3
        if (error = 0) {
            do ..SendData("OK!" _ $C(13,10))
        } else {
            do ..SendData("ERROR!" _ $C(13,10))
        }
        do ..SendData("Clearing temporary files... ")
        if (##class(%Library.File).Delete(filepath) = 1) {
            do ..SendData($C(27)_"[32mOK" _ $C(27) _ "[0m" _ $C(13,10))
        } else {
            do ..SendData($C(27)_"[31mFAIL" _ $C(27) _ "[0m" _ $C(13,10))
            quit $$$NOTOK
        }
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="CheckUpdate">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set httprequest = ##class(%Net.HttpRequest).%New()
    set httprequest.Server = "intersystems-ru.github.io"
    do httprequest.Get("/webterminal/latestVersion")
    if (httprequest.HttpResponse.StatusCode '= 200) {
        do ..SendData($C(27)_"[31mFAIL" _ $C(27) _ "[0m (status code "
            _ httprequest.HttpResponse.StatusCode _ ")" _ $C(13,10))
        quit $$$NOTOK
    }
    if ($isobject(httprequest.HttpResponse.Data)) {
        do ..SendData(httprequest.HttpResponse.Data.Read(), ..ConstClientPromptUpdate)
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="ExecuteCommand">
<Description>
The heart of terminal application</Description>
<FormalSpec>query:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    if (query = "") quit $$$OK
    
    #dim exception as %Exception.AbstractException
    set value = $Replace(query, $CHAR(10), " ")
    
    do ..StartClearIO() // execute session start
    
    set $ZERROR = ""
    
    try { xecute value } catch exception {
        set $ZERROR = exception.DisplayString()
    }
    
    if ($ZERROR '= "") {
        w $ZERROR, *-3
    }
    
    do ..EndClearIO() // execute session end
    do ..ClientAlertNamespace() // check namespace change
    
    quit $$$OK
]]></Implementation>
</Method>

<Method name="RequireAuthorization">
<Description>
This method holds process and expects only one package from
the client - it includes authorization key.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set authKey = ..Read(,.status,..#authorizationTimeout) // wait for package
    set ok = $$$NOTOK
    
    /*
     * Find given CSPSessionCookie in session list. If found, grant access
     */
    SET key = $ORDER(^%cspSession(""))
    WHILE (key '= "") {
        set lb = $GET(^%cspSession(key))
        if (lb '= "") {
            if ($LISTGET(lb, 8) = authKey) {
                
                // setup privileges
                ZNSPACE $LISTGET(lb, 7) // namespace
                
                set user = $LISTGET($LISTGET(lb, 16), 1) // user
                set loginStatus = ##class(%SYSTEM.Security).Login($LISTGET($LISTGET(lb, 16), 1)) // login user
                
                if ($$$ISOK(loginStatus)) { // alert client
                    do ..SendData($SYSTEM _ ":" _ user, ..ConstClientLoginInfo)
                } else {
                    do ..SendData("!",..ConstClientLoginInfo)
                }
                
                set ok = loginStatus
                QUIT
                
            }
        }
        SET key = $ORDER(^%cspSession(key))
    }
    
    quit ok
]]></Implementation>
</Method>

<Method name="ClientLoop">
<Description><![CDATA[
Main method for every new client.

Authorization process description:
    1.  Client requests cache server page called "WebTerminal.csp";
    2.  Server return this page with ClassMethod GetAuthKey() value;
    3.  After client receives page, it performs websocket connection;
        to same web-resource, but with next URL changes:
        "http://" -> "ws://", "WebTerminal.csp" -> "Webterminal.Engine.cls";
    4.  After connection established, client sends his AuthKey to server
        and removes it locally (because it needed only one time);
    5.  Server compares again received key with ..GetAuthKey() value and
        grants permission, if keys are equal.
    >>  As a result - there is no way to autorize via websocket without
        accessing WebTerminal.csp.

Method description:
    First, method requires from client 
    a key, which will be compared with ..GetAuthKey() (global). If 
    succeeded, method sets "authorized" flag to true and changes global
    key with ..GenerateAuthKey() for the next client.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    
    kill // clear junk vars
    
    do ..SendData($NAMESPACE, ..ConstClientPrompt)
    
    for {
        
        set data = ..Read(,.status)
    
        if $$$ISERR(status) {
       
            try {
                do ..SendData("Error occured while reading data.",
                ..ConstClientOutputMessage)
            } catch e { }
            quit:($$$GETERRORCODE(status)=$$$CSPWebSocketClosed)
            
        }
        
        set pos = $FIND(data, "#")
        set action = $EXTRACT(data, 1, pos-2)
        set data = $EXTRACT(data, pos, *)
            
        if (action = ..ConstServerActionExecute) {
            
            do ..ExecuteCommand(data)
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
                
        } elseif (action = ..ConstServerActionCheckTrace) {
        
            set changes = ..CheckTracing()
            if (changes '= "") {
                do ..SendData(changes)   
            }
          
        } elseif (action = ..ConstServerActionTrace) { // add/remove
        
            set result = ..Trace(data)
            if ('$$$ISOK(result)) {
                set result = ..StopTracing(data)
                if ('$$$ISOK(result)) {
                    do ..SendData("!" _ data, ..ConstClientTrace)
                }
            }
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
          
        } elseif (action = ..ConstServerActionStopTraceAll) { // add/remove
        
            FOR i=1:1:$LISTLENGTH(..Watches) {
                d ..StopTracing($LIST(..Watches, i))
            }
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
          
        } elseif (action = ..ConstServerActionExecuteSQL) { // sql
        
            do ..ExecuteSQL(data)
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
          
        } elseif (action = ..ConstServerActionGenerateAutocomplete) {
            
            //do ..GenerateAutocompleteFile("%", data)
            do ..GenerateAutocompleteFile(..CurrentNamespace, data)
                    
        } elseif (action = ..ConstServerActionReset) {
              
            if ($$$ISOK(..Reset())) {
                do ..SendData("Terminal state reseted.")
            } else {
                do ..SendData("Error while reseting terminal state.")
            }
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
                    
        } elseif (action = ..ConstServerActionEcho) {
              
            do ..StartClearIO()
            write data
            do ..EndClearIO()
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
                    
        } elseif (action = ..ConstServerActionCheckUpdate) {
            
            do ..CheckUpdate()
            
        } elseif (action = ..ConstServerActionUpdate) {
            
            do ..Update(data)
            do ..SendData("Please, refresh the page to apply updates.")
            
        } else { // something scary
                
            do ..SendData("Client action unrecognised: " _ action)
            do ..SendData($NAMESPACE, ..ConstClientPrompt)
                    
        }
            
    }
]]></Implementation>
</Method>

<Method name="Server">
<Description>
New connection established</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    
    /*COMMENT ON RELEASE!*/
    /*ZNSPACE "%SYS" // namespace
    set loginStatus = ##class(%SYSTEM.Security).Login("_SYSTEM") // login user
    if ($$$ISOK(loginStatus)) { // alert client
        do ..SendData($SYSTEM _ ":" _ $USERNAME, ..ConstClientLoginInfo)
    } else {
        do ..SendData("!",..ConstClientLoginInfo)
    }*/
    
    /*UNCOMMENT ON RELEASE!*/
    if ($$$ISOK(..RequireAuthorization())) {
        
        set ..CurrentNamespace = $Znspace
        
        do ..SendData("1", ..ConstClientAuthorizationStatus)
        do ..SendData(..CurrentNamespace, ..ConstClientChangeNamespace)
           
        use $io::("^" _ ..InitialZName) // switch to routine
        do ..ClientLoop()
        
    } else {
        
        do ..SendData("0", ..ConstClientAuthorizationStatus)
        do ..EndServer()
            
    }
    
    quit $$$OK
]]></Implementation>
</Method>
</Class>


<Project name="WebTerminal" LastModified="2014-08-28 20:07:44.026275">
  <Items>
    <ProjectItem name="%WebTerminal.Engine" type="CLS"></ProjectItem>
    <ProjectItem name="csp/sys/WebTerminal/css/base.css" type="CSP"></ProjectItem>
    <ProjectItem name="csp/sys/WebTerminal/css/terminal.css" type="CSP"></ProjectItem>
    <ProjectItem name="csp/sys/WebTerminal/favicon.ico" type="CSP"></ProjectItem>
    <ProjectItem name="csp/sys/WebTerminal/index.CSP" type="CSP"></ProjectItem>
    <ProjectItem name="csp/sys/WebTerminal/js/terminal.js" type="CSP"></ProjectItem>
  </Items>
</Project>


<CSP name="css/base.css" application="/csp/sys/webterminal/"><![CDATA[
html, body {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    overflow: hidden;
}]]></CSP>


<CSP name="css/terminal.css" application="/csp/sys/webterminal/"><![CDATA[
@-webkit-keyframes blink {
    0% { opacity: 1.0; }
    50% { opacity: 0.0; }
    100% { opacity: 1.0; }
}

@-o-keyframes blink {
    0% { opacity: 1.0; }
    50% { opacity: 0.0; }
    100% { opacity: 1.0; }
}

@-moz-keyframes blink {
    0% { opacity: 1.0; }
    50% { opacity: 0.0; }
    100% { opacity: 1.0; }
}

@-ms-keyframes blink {
    0% { opacity: 1.0; }
    50% { opacity: 0.0; }
    100% { opacity: 1.0; }
}

@keyframes blink {
    0% { opacity: 1.0; }
    50% { opacity: 0.0; }
    100% { opacity: 1.0; }
}
.term-gri1 { /* bright */
    font-weight: 900;
}

.term-gri2 { /* dim */
    opacity: 0.8;
}

.term-gri3 {
    font-style: italic;
}

.term-gri4 {
    text-decoration: underline;
}

.term-gri5 {
    animation: blink infinite 1s;
    -o-animation: blink infinite 1s;
    -ms-animation: blink infinite 1s;
    -moz-animation: blink infinite 1s;
    -webkit-animation: blink infinite 1s;
}

.term-gri7 {
    -webkit-filter: invert(100%);
    filter: invert(100%);
}

.term-gri8 {
    opacity: 0;
}

.term-gri30 {
    color: #000000;
}

.term-gri31 {
    color: #ff0000;
}

.term-gri32 {
    color: #008000;
}

.term-gri33 {
    color: yellow;
}

.term-gri34 {
    color: #0000ff;
}

.term-gri35 {
    color: magenta;
}

.term-gri36 {
    color: cyan;
}

.term-gri37 {
    color: white;
}

.term-gri40 {
    background-color: #000000;
}

.term-gri41 {
    background-color: #ff0000;
}

.term-gri42 {
    background-color: #008000;
}

.term-gri43 {
    background-color: yellow;
}

.term-gri44 {
    background-color: #0000ff;
}

.term-gri45 {
    background-color: magenta;
}

.term-gri46 {
    background-color: cyan;
}

.term-gri47 {
    background-color: white;
}
.terminalContainer {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    color: white;
    background: black; /*url("../img/back.png") black;*/
    font-family: FreeMono, monospace;
    font-size: 16px;
}

.terminalContainer .terminalOutputCentralizer {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: table;
}

.terminalContainer .terminalOutputCentralizer > div {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
}

.terminalContainer .terminalOutputCentralizer > div > div {
    display: inline-block;
    text-align: left;
    position: relative;
    overflow-y: scroll;
}

.terminalContainer .terminalInput {
    width: 100%;
    margin: 0;
    padding: 0;
    opacity: 0;

    /* ie visible caret fix (except one annoying pixel, huh) */
    position: absolute;
    height: 1em;
    top: -1.5em;
}

.terminalContainer .terminalOutput {
    white-space: pre;
    word-wrap: break-word;
    word-break: break-all;
    overflow-x: hidden;
}

.terminalContainer .terminalLine {
    position: relative;
    overflow: hidden;
}

.terminalContainer .terminalCaret {
    position: absolute;
    left: 0;
    top: 0;
    animation: blink infinite 1s;
    -o-animation: blink infinite 1s;
    -ms-animation: blink infinite 1s;
    -moz-animation: blink infinite 1s;
    -webkit-animation: blink infinite 1s;
}

.terminalContainer .terminalCaret:after {
    content: "_";
}

.terminalContainer .terminalHint {
    position: absolute;
    left: 0;
    top: 0;
    color: inherit;
    opacity: 0.6;
    text-shadow: 1px 1px 4px black;
    z-index: 10;
}]]></CSP>


<CSPBase64 name="favicon.ico" application="/csp/sys/webterminal/">
AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAA
AAAAAAD///8BAAAABQAAABEAAAAJAAAAAwAAAAMAAAAD////Af///wH///8B////Af///wH///8B
////Af///wH///8B////AQAAAAcAAAAVLyoiXzcxJa09NijfPjcp4YiHhcWbm5ypioqLhWtrbF8v
Ly85AAAAIQAAAAP///8B////AXt7fBGFhYZHiomLRXFua0FEPzNPOjMkY1dSSceqqqr/vLy9/7a2
t/+vr7D/kZGS4wAAABkAAAAbAAAAFf///wGXlZKPq6qg57GtlK2vqIqjsaySt6+qlcOvr5/1t7es
/76+t//GxsT/zMzM98fIyIW8vLxDwcHBKY6Njg////8BioZ8j5aTjpkUERGjHRIS4SIVFM8oGRa9
Mh8ZrUc0KatfTT2tdWROsYZ1XauciHGVt6aQl7uwnp/GxLPRuLi2gYyIfo+XlJCZCQgIzQAAAP8A
AAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8IBgX/Eg8O5bOwpXuOi4CPmZaSmQgI
B80AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wICAfGqqKB3kY2C
j5yZlJkIBwfNAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8FBATt
paKcd5SQhY+em5eZCAcHzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wUFBf8a
Ghr/Li0s65+dl3WXk4iPop+amQgHB80AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AQEB/xIS
Ev8mJib/MjIy/zk3NumamJJ1m5eMj6WinZkHBwfPXV1d/wcHB/9PT0//V1dX/0tLS/8AAAD/BQUF
/xkZGf8nJyf/MjIy/zw8PP9CPz3nlJKNdZ+bj5GopZ+ZBwcHz25ubv+qqqr/ODg4/zg4OP8pKSn/
CAgI/xwcHP8oKCj/MzMz/zw8PP9DQ0P/SENB55COiXOin5KRq6iimQcHBs9gYGD/m5ub/wAAAP8A
AAD/DQ0N/x0dHf8oKCj/MzMz/z09Pf9DQ0P/R0dH/0pFQ+WMioVzpaGUkaunoZ8ICAjPc3Nz/wcH
B/0GBgb1FBMT7x4eHecqKSfhNTMx3T89OttIRUHZT0xH2VVSTNtwbWTflZOQibKwrYe4tanplpGC
s4uDcamblIOto52Ot6Gcj7+fmo69nZmNs5qWi6mVkombjoyFjYaFgH9/f3xxfXx9Y3t8fi+npqYb
sbKyU7m4uE2/v787srKxKY+OjxdtbW0H////Af///wH///8B////Af///wH///8B////Af///wH/
//8B//8AAPA/AAD8DwAAAA8AAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAA
AAAADwAA//8AAA==
</CSPBase64>


<CSP name="index.CSP" application="/csp/sys/webterminal/"><![CDATA[
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8"/>
    <title>Cach&eacute; WEB Terminal</title>
    <meta name="author" content="ZitRo"/>
    <meta name="description" content="Web-based terminal emulator for Cach√© administering."/>
    <meta name="keywords" content="Cache,Cach√©,terminal,web,remote,control,Cach√© WebTerminal"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/>
    <meta name="MobileOptimized" content="320"/>
    <meta name="HandheldFriendly" content="true"/>
    <meta name="mobile-web-app-capable" content="yes"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    <link href="favicon.ico" rel="shortcut icon" type="image/x-icon"/>

    <link rel="stylesheet" href="css/base.css"/>
    <link rel="stylesheet" href="css/terminal.css"/>
    <script type="text/javascript" src="js/terminal.js"></script>
</head>
<body onload="this.terminal = createTerminal('#(%session.CSPSessionCookie)#');">

</body>
</html>]]></CSP>


<CSP name="js/terminal.js" application="/csp/sys/webterminal/"><![CDATA[
!function(a, b) {
    b.terminal = a;
    var c = function() {
        this.keywords = [ "break", "catch", "close", "continue", "do", "d", "else", "elseif", "for", "goto", "halt", "hang", "h", "if", "job", "j", "kill", "k", "lock", "l", "merge", "new", "open", "quit", "q", "read", "r", "return", "set", "s", "tcommit", "throw", "trollback", "try", "tstart", "use", "view", "while", "write", "w", "xecute", "x", "zkill", "znspace", "zn", "ztrap", "zwrite", "zw", "zzdump", "zzwrite", "print", "zbreak", "zinsert", "zload", "zprint", "zremove", "zsave", "zzprint", "mv", "mvcall", "mvcrt", "mvdim", "mvprint", "zquit", "zsync", "ascii", "$bit", "$bitcount", "$bitfind", "$bitlogic", "$case", "$char", "$classmethod", "$classname", "$compile", "$data", "$decimal", "$double", "$extract", "$factor", "$find", "$fnumber", "$get", "$increment", "$inumber", "$isobject", "$isvaliddouble", "$isvalidnum", "$justify", "$length", "$list", "$listbuild", "$listdata", "$listfind", "$listfromstring", "$listget", "$listlength", "$listnext", "$listsame", "$listtostring", "$listvalid", "$locate", "$match", "$method", "$name", "$nconvert", "$next", "$normalize", "$now", "$number", "$order", "$parameter", "$piece", "$prefetchoff", "$prefetchon", "$property", "$qlength", "$qsubscript", "$query", "$random", "$replace", "$reverse", "$sconvert", "$select", "$sortbegin", "$sortend", "$stack", "$text", "$translate", "$view", "$wascii", "$wchar", "$wextract", "$wfind", "$wiswide", "$wlength", "$wreverse", "$xecute", "$zabs", "$zarccos", "$zarcsin", "$zarctan", "$zcos", "$zcot", "$zcsc", "$zdate", "$zdateh", "$zdatetime", "$zdatetimeh", "$zexp", "$zhex", "$zln", "$zlog", "$zpower", "$zsec", "$zsin", "$zsqr", "$ztan", "$ztime", "$ztimeh", "$zboolean", "$zconvert", "$zcrc", "$zcyc", "$zdascii", "$zdchar", "$zf", "$ziswide", "$zlascii", "$zlchar", "$zname", "$zposition", "$zqascii", "$zqchar", "$zsearch", "$zseek", "$zstrip", "$zwascii", "$zwchar", "$zwidth", "$zwpack", "$zwbpack", "$zwunpack", "$zwbunpack", "$zzenkaku", "$change", "$mv", "$mvat", "$mvfmt", "$mvfmts", "$mviconv", "$mviconvs", "$mvinmat", "$mvlover", "$mvoconv", "$mvoconvs", "$mvraise", "$mvtrans", "$mvv", "$mvname", "$zbitand", "$zbitcount", "$zbitfind", "$zbitget", "$zbitlen", "$zbitnot", "$zbitor", "$zbitset", "$zbitstr", "$zbitxor", "$zincrement", "$znext", "$zorder", "$zprevious", "$zsort", "device", "$ecode", "$estack", "$etrap", "$halt", "$horolog", "$io", "$job", "$key", "$namespace", "$principal", "$quit", "$roles", "$storage", "$system", "$test", "$this", "$tlevel", "$username", "$x", "$y", "$za", "$zb", "$zchild", "$zeof", "$zeos", "$zerror", "$zhorolog", "$zio", "$zjob", "$zmode", "$znspace", "$zparent", "$zpi", "$zpos", "$zreference", "$zstorage", "$ztimestamp", "$ztimezone", "$ztrap", "$zversion" ];
    }, d = function(a) {
        this._lc = a.TERMINAL.localization, this.CONTROLLER = a, this._trace = {}, this._interval = 0, 
        this.TRACING_INTERVAL = 1e3;
    };
    d.prototype._timeout = function() {
        this.CONTROLLER.EXECUTION_IN_PROGRESS || this.CONTROLLER.server.send(this.CONTROLLER.SERVER_ACTION.CHECK_TRACE);
    }, d.prototype.start = function(a) {
        var b = this;
        return "!" === a.charAt(0) ? void this.CONTROLLER.TERMINAL.output.print(this._lc.get(5, a.substr(1))) : (this._interval || (this._interval = setInterval(function() {
            b._timeout.call(b);
        }, b.TRACING_INTERVAL)), this._trace[a] = !0, void this.CONTROLLER.TERMINAL.output.print(this._lc.get(7, a)));
    }, d.prototype.stop = function(a) {
        var b = !0;
        if (a) delete this._trace[a], this.CONTROLLER.TERMINAL.output.print(this._lc.get(8, a)); else for (b in this._trace) this.CONTROLLER.server.send(this.CONTROLLER.SERVER_ACTION.TRACE + b);
        for (b in this._trace) {
            b = !1;
            break;
        }
        b && (clearInterval(this._interval), this._interval = 0);
    };
    var e = function(a, b, c, d) {
        this._lc = a.TERMINAL.localization, this.CACHE_CLASS_NAME = "%WebTerminal.Engine.cls", 
        this.PROTOCOL = b, this.IP = c, this.PORT = d, this.CONTROLLER = a, this.socket = null, 
        this.initialize();
    };
    e.prototype.RECONNECTION_TIMEOUT = 1e4, e.prototype.initialize = function() {
        var a = this;
        try {
            this.socket = new WebSocket(this.PROTOCOL + "//" + this.IP + (this.PORT ? ":" + this.PORT : "") + "/" + encodeURIComponent(this.CACHE_CLASS_NAME));
        } catch (b) {
            this.onError(), console.error(b);
        }
        this.socket.onopen = function(b) {
            a.onConnect.call(a, b);
        }, this.socket.onclose = function(b) {
            a.onClose(b);
        }, this.socket.onerror = function() {
            a.onError();
        }, this.socket.onmessage = function(b) {
            console.log("server >> ", b.data), a.CONTROLLER.serverData(b.data);
        };
    }, e.prototype.getAutocompleteFile = function(a, b) {
        f.get("js/autocomplete/" + encodeURIComponent(a) + ".js", function(c) {
            try {
                c = JSON.parse(c);
            } catch (d) {
                c = null, console.warn("No autocomplete data for " + a);
            }
            b(c, a);
        });
    }, e.prototype.send = function(a) {
        try {
            console.log("server << ", a), this.socket.send(a);
        } catch (b) {
            this.CONTROLLER.TERMINAL.output.print(this._lc.get(3) + "\r\n"), console.error(b);
        }
    }, e.prototype.onConnect = function() {
        var a;
        this.CONTROLLER.TERMINAL.output.print(this._lc.get(2) + "\r\n"), (a = this.CONTROLLER.TERMINAL.SETUP.authKey) && this.send(a);
    }, e.prototype.onClose = function(a) {
        this.CONTROLLER.TERMINAL.output.print(this._lc.get(4, a.code, a.reason) + "\r\n");
    }, e.prototype.onError = function() {
        var a = this;
        this.CONTROLLER.TERMINAL.output.print(this._lc.get(6, this.socket.url, this.RECONNECTION_TIMEOUT / 1e3)), 
        setTimeout(function() {
            a.initialize();
        }, this.RECONNECTION_TIMEOUT);
    }, String.prototype.splice = function(a, b, c) {
        return this.slice(0, a) + c + this.slice(a + Math.abs(b));
    };
    var f = new function() {
        this.get = function(a, b, c) {
            var d, e = new XMLHttpRequest();
            c = "cache=" + (c ? 1 : Math.random()), e.onreadystatechange = function() {
                4 === e.readyState && (200 === e.status ? b.call(window, e.responseText, !1) : b.call(window, "", !0));
            }, d = -1 === a.indexOf("?") ? "?" : "&";
            try {
                e.open("GET", a + d + c, !0), e.send();
            } catch (f) {}
        };
    }();
    this.createTerminal = function(a) {
        return new g({
            container: document.body,
            authKey: a || null
        });
    };
    var g = function(a) {
        this.VERSION = "".concat("2.0.0-alpha.1") || "*-dev", this.RELEASE_NUMBER = parseInt("".concat(1)) || 0, 
        this.storage = new u(), this.localization = new q(this), this.SETUP = {
            controller: a.controller || new i(this),
            container: a.container || document.body,
            authKey: a.authKey || null
        }, this.elements = new k(this.SETUP.container), this.parser = new t(), this.output = new r(this), 
        this.input = new n(this), this.dictionary = new c(), this.favorites = new l(this), 
        this.definitions = new j(this), this.controller = this.SETUP.controller, this.autocomplete = new h(), 
        this.initialize();
    };
    g.prototype.initialize = function() {
        var a;
        for (a in this.controller.internalCommands) this.autocomplete.register(this.autocomplete.TYPES.keyword, "/" + a);
        for (a in this.dictionary.keywords) this.autocomplete.register(this.autocomplete.TYPES.keyword, this.dictionary.keywords[a]), 
        this.autocomplete.register(this.autocomplete.TYPES.keyword, this.dictionary.keywords[a].toUpperCase());
    }, g.prototype.reset = function() {
        var a = this;
        this.output.printSync(this.localization.get(9) + "\r\n"), window.addEventListener("beforeunload", function() {
            a.storage.clear();
        });
    };
    var h = function() {
        this._trie = {}, this._namespaceTries = {}, this.NAMESPACE = "";
    };
    h.prototype.TYPES = {
        common: {
            regExp: /([a-zA-Z][a-z0-9A-Z]*)$/
        },
        keyword: {
            regExp: /([\$\/]*[a-zA-Z]*[a-z0-9A-Z]*)$/i
        },
        "class": {
            regExp: /##class\((%?[a-zA-Z]*[a-zA-Z0-9\.]*)$/,
            priority: 1,
            split: "."
        },
        subclass: {
            regExp: /##class\((%?[a-zA-Z]*[a-zA-Z0-9\.]*)\)\.(%?[a-zA-Z]*[a-zA-Z0-9]*)$/,
            priority: 1
        },
        globals: {
            regExp: /\^(%?[a-z0-9A-Z]*)/
        }
    }, h.prototype.setNamespace = function(a) {
        this.NAMESPACE = a;
    }, h.prototype._appendEndings = function(a, b, c) {
        var d, e = function(b, c) {
            a[b] = c;
        }, f = function(a, b) {
            for (d in a) d === c.split && "" !== b ? e(b, 0) : "\n" === d ? "" !== b && a[d].type === c && e(b, 0) : "type" !== d && f(a[d], b + d);
        }, g = function(a) {
            for (d = 0; d < b.length; d++) if (a = a[b[d]], !a) return;
            f(a, "");
        };
        g(this._trie), g(this._namespaceTries[this.NAMESPACE] || {});
    }, h.prototype.getEndings = function(a) {
        var b, c, d, e = {}, f = [], g = 0, h = 60;
        a = a.substr(a.length - h, h);
        for (b in this.TYPES) c = this.TYPES[b].regExp || this.TYPES.common.regExp, d = (a.match(c) || []).slice(1).join("\n"), 
        d && (this.TYPES[b].priority > g ? (e = {}, g = this.TYPES[b].priority, this._appendEndings(e, d, this.TYPES[b])) : (this.TYPES[b].priority || 0 === g) && this._appendEndings(e, d, this.TYPES[b]));
        for (b in e) f.push(b);
        return f.sort(function(a, b) {
            return e[a] - e[b];
        }), f;
    }, h.prototype.register = function(a, b, c, d) {
        var e, f = c ? this._namespaceTries[c] || (this._namespaceTries[c] = {}) : this._trie;
        for (d && (b = (d || []).join("\n") + "\n" + b), e = 0; e < b.length; e++) f = f.hasOwnProperty(b[e]) ? f[b[e]] : f[b[e]] = {};
        f["\n"] = {
            type: a
        };
    };
    var i = function(a) {
        this.TERMINAL = a, this._lc = a.localization, this.EXECUTION_IN_PROGRESS = !1, this.server = new e(this, "https:" === location.protocol ? "wss:" : "ws:", location.hostname, "".concat(location.port || 80) || "57772"), 
        this.trace = new d(this), this.NAMESPACE = "UNAUTHORIZED", this._mode = this.MODE.UNAUTHORIZED;
    };
    i.prototype.MODE = {
        UNAUTHORIZED: 0,
        EXECUTE: 1,
        CLEAR_IO: 2,
        SQL: 3,
        MACRO: 4
    }, i.prototype.SERVER_ACTION = {
        EXECUTE: "EXEC#",
        EXECUTE_SQL: "SQL#",
        AUTOCOMPLETE: "AC#",
        TRACE: "TRACE#",
        STOP_TRACE_ALL: "STOP_TRACE_ALL#",
        CHECK_TRACE: "CT#",
        RESET: "R#",
        ECHO: "E#",
        CHECK_UPDATE: "CU#",
        UPDATE: "U#"
    }, i.prototype.authorized = function() {
        this._mode = this.MODE.EXECUTE, this.TERMINAL.output.printSync(this._lc.get(10) + "\r\n");
    }, i.prototype.setNamespace = function(a) {
        this.TERMINAL.autocomplete.setNamespace(a), this.NAMESPACE = a;
    }, i.prototype.internalCommands = {
        help: function() {
            this.TERMINAL.output.print(this.TERMINAL.localization.get(1));
        },
        autocomplete: function(a) {
            return "gen" === a[0] ? this.server.send(this.SERVER_ACTION.AUTOCOMPLETE) : this.mergeAutocompleteFile(this.NAMESPACE), 
            !1;
        },
        echo: function(a) {
            return this.server.send(this.SERVER_ACTION.ECHO + a.join("\r\n")), !1;
        },
        trace: function(a) {
            return this.server.send(a[0] ? this.SERVER_ACTION.TRACE + a[0] : this.SERVER_ACTION.STOP_TRACE_ALL), 
            !1;
        },
        sql: function() {
            this._mode = this._mode === this.MODE.SQL ? this.MODE.EXECUTE : this.MODE.SQL;
        },
        reset: function() {
            return this.TERMINAL.reset(), !1;
        },
        favorite: function(a) {
            var b, c = this;
            a.length ? a[1] ? this.TERMINAL.favorites.set(a[1], a[0]) : (b = this.TERMINAL.favorites.get(a[0]), 
            b ? setTimeout(function() {
                c.TERMINAL.input.set(b);
            }, 1) : this.TERMINAL.output.print(this._lc.get(12, a[0], this.TERMINAL.favorites.getList().join(", ")) + "\r\n")) : this.TERMINAL.output.print(this._lc.get(11, this.TERMINAL.favorites.getList().join(", ")) + "\r\n");
        },
        define: function(a) {
            a[0] && a[1] && "clear" !== a[0] ? (this.TERMINAL.definitions.define(a[1], a[0]), 
            this.TERMINAL.output.print(this._lc.get(13, a[0], a[1]))) : "clear" === a[0] ? (this.TERMINAL.definitions.clear(), 
            this.TERMINAL.output.print(this._lc.get(14) + "\r\n")) : this.TERMINAL.output.print(this._lc.get(15, this.TERMINAL.definitions.getList().join(", ")));
        },
        version: function() {
            this.TERMINAL.output.print(this.TERMINAL.VERSION + "\r\n");
        },
        update: function() {
            return this.TERMINAL.output.print(this._lc.get(16, this.TERMINAL.VERSION) + "\r\n"), 
            this.server.send(this.SERVER_ACTION.CHECK_UPDATE), !1;
        },
        settings: function(a) {
            var b, c, d, e, f = this;
            (b = a.join("")).match(/[a-z]=[a-z0-9]/) ? (c = b.substring(0, b.indexOf("=")), 
            d = b.substr(c.length + 1), e = {
                locale: function(a) {
                    f.TERMINAL.output.print(f.TERMINAL.localization.setLocale(a) ? f._lc.get(27, a) + "\r\n" : f._lc.get(28, a) + "\r\n");
                }
            }[c], e && e(d)) : this.TERMINAL.output.print(this._lc.get(26, "locale", this.TERMINAL.localization.getLocale()) + "\r\n");
        }
    }, i.prototype.internalCommand = function(a) {
        var b, c, d = a.match(/^\/([a-z]+)|\s\/([a-z]+)/), e = [], f = [];
        return d ? ((c = d[1]) ? b = a.substr(d[0].length) : (c = d[2]) && (e.push(a.substr(0, a.indexOf(d[0]))), 
        b = a.substr(a.indexOf(d[0]) + d[0].length)), f = b.match(/"([^"]*)"|([^\s]*)/g), 
        f.filter(function(a, b, c) {
            '"' === a.charAt(0) && (c[b] = a.substr(1, a.length - 2)), a && e.push(c[b]);
        }), this.internalCommands.hasOwnProperty(c) ? this.internalCommands[c].call(this, e) === !1 ? -1 : !0 : (this.TERMINAL.output.print(this._lc.get(17, c) + "\r\n"), 
        !0)) : !1;
    }, i.prototype.terminalQuery = function(a) {
        var b;
        this.EXECUTION_IN_PROGRESS ? this.server.send(a) : (this.TERMINAL.output.print("\r\n"), 
        b = this.internalCommand(a), -1 === b || (b ? this.clientAction.PROMPT.call(this, this.NAMESPACE) : this._mode === this.MODE.SQL ? this.server.send(this.SERVER_ACTION.EXECUTE_SQL + a) : this._mode === this.MODE.EXECUTE ? this.server.send(this.SERVER_ACTION.EXECUTE + a) : console.warn("Unimplemented in mode " + this._mode + ": ", a)));
    }, i.prototype.mergeAutocompleteFile = function(a) {
        var b, c, d = this.TERMINAL.autocomplete, e = this, f = 0;
        e.TERMINAL.output.printSync(this._lc.get(18, a) + "\r\n"), this.server.getAutocompleteFile(a, function(a, g) {
            if (a) {
                if (a["class"]) for (b in a["class"]) {
                    d.register(d.TYPES.class, b, g);
                    for (c in a["class"][b]) d.register(d.TYPES.subclass, c, g, [ b ]);
                    ++f;
                }
                if (e.TERMINAL.output.print(e._lc.get(19, f) + "\r\n"), f = 0, a.global) for (b in a.global) d.register(d.TYPES.globals, "^" + b, g), 
                ++f;
                e.TERMINAL.output.print(e._lc.get(20, f) + "\r\n"), e.clientAction.PROMPT.call(e, e.NAMESPACE);
            } else e.TERMINAL.output.print(e._lc.get(21) + "\r\n"), e.server.send(e.SERVER_ACTION.AUTOCOMPLETE);
        });
    }, i.prototype.clientAction = {
        PROMPT: function(a) {
            this.setNamespace(a), this.TERMINAL.output.print("\r\n"), this.TERMINAL.input.prompt(a + (this._mode === this.MODE.SQL ? ":SQL" : "") + " > ");
        },
        EST: function() {
            this.EXECUTION_IN_PROGRESS = !0;
        },
        END: function() {
            this.EXECUTION_IN_PROGRESS = !1;
        },
        O: function(a) {
            this.TERMINAL.output.print(a);
        },
        NS: function(a) {
            this.setNamespace(a);
        },
        AC: function(a) {
            this.mergeAutocompleteFile(a);
        },
        R: function(a) {
            this.TERMINAL.input.prompt("", a);
        },
        RC: function() {
            this.TERMINAL.input.prompt("", 1);
        },
        AUTH: function(a) {
            "1" === a ? this.authorized() : this.TERMINAL.output.printSync(this._lc.get(22) + "\r\n");
        },
        TRACE: function(a) {
            this.trace.start(a);
        },
        STOP_TRACE: function(a) {
            this.trace.stop(a);
        },
        I: function(a) {
            this.TERMINAL.output.print(a + "\r\n");
        },
        CLRSCR: function() {
            this.TERMINAL.output.clear();
        },
        PROMPT_UPDATE: function(a) {
            var b, c = this, d = a.split("#");
            return b = d[1], d = parseInt(d[0]), b && d ? void (d > this.TERMINAL.RELEASE_NUMBER ? (this.TERMINAL.output.print(this._lc.get(23) + "\r\n"), 
            this.TERMINAL.input.prompt("", 1, function(a) {
                "y" === a.toLowerCase() ? (c.TERMINAL.output.print(" " + c._lc.get(24) + "\r\n"), 
                c.server.send(c.SERVER_ACTION.UPDATE + b)) : c.clientAction.PROMPT.call(c, c.NAMESPACE);
            })) : (this.TERMINAL.output.print(this._lc.get(24) + "\r\n"), this.clientAction.PROMPT.call(this, this.NAMESPACE))) : void console.error("Unable to parse version data: ", a);
        }
    }, i.prototype.serverData = function(a) {
        var b = a.split("#", 1)[0], c = a.substr(b.length + 1);
        "7" === b.charAt(4) && (b = b.substr(5)), this.clientAction.hasOwnProperty(b) ? this.clientAction[b].call(this, c) : (this.TERMINAL.output.print(a), 
        console.error("Server response unrecognised:", a));
    };
    var j = function(a) {
        this.TERMINAL = a, this._storage = {}, this.initialize();
    };
    j.prototype.STORAGE_NAME = "definitions", j.prototype.initialize = function() {
        var a = this, b = this.TERMINAL.storage.get(this.STORAGE_NAME);
        window.addEventListener("beforeunload", function() {
            a.TERMINAL.storage.set(a.STORAGE_NAME, a.exportJSON());
        }), b && this.importJSON(b);
    }, j.prototype.define = function(a, b) {
        this._storage[a] = b;
    }, j.prototype.clear = function() {
        this._storage = {};
    }, j.prototype.getList = function() {
        var a, b = [];
        for (a in this._storage) b.push(a);
        return b;
    }, j.prototype.replace = function(a) {
        var b;
        for (b in this._storage) a = a.replace(b, this._storage[b]);
        return a;
    }, j.prototype.importJSON = function(a) {
        var b, c;
        try {
            b = JSON.parse(a);
            for (c in this) this.hasOwnProperty(c) && (this[c] = b[c] || this[c]);
        } catch (d) {
            console.error(d);
        }
    }, j.prototype.exportJSON = function() {
        return JSON.stringify({
            _storage: this._storage
        });
    };
    var k = function(a) {
        this.terminal = document.createElement("div"), this.output = document.createElement("div"), 
        this.input = document.createElement("input"), this._initialize(a);
    };
    k.prototype._initialize = function(a) {
        var b = document.createElement("div"), c = document.createElement("div");
        this.terminal.className = "terminalContainer", b.className = "terminalOutputCentralizer", 
        this.input.className = "terminalInput", this.output.className = "terminalOutput", 
        this.terminal.appendChild(this.input), c.appendChild(this.output), b.appendChild(c), 
        this.terminal.appendChild(b), a.appendChild(this.terminal);
    };
    var l = function(a) {
        this.TERMINAL = a, this._storage = {}, this.initialize();
    };
    l.prototype.STORAGE_NAME = "favorites", l.prototype.initialize = function() {
        var a = this, b = this.TERMINAL.storage.get(this.STORAGE_NAME);
        window.addEventListener("beforeunload", function() {
            a.TERMINAL.storage.set(a.STORAGE_NAME, a.exportJSON());
        }), b && this.importJSON(b);
    }, l.prototype.set = function(a, b) {
        this._storage[a] = b;
    }, l.prototype.get = function(a) {
        return this._storage[a] || "";
    }, l.prototype.getList = function() {
        var a, b = [];
        for (a in this._storage) b.push(a);
        return b;
    }, l.prototype.importJSON = function(a) {
        var b, c;
        try {
            b = JSON.parse(a);
            for (c in this) this.hasOwnProperty(c) && (this[c] = b[c] || this[c]);
        } catch (d) {
            console.error(d);
        }
    }, l.prototype.exportJSON = function() {
        return JSON.stringify({
            _storage: this._storage
        });
    };
    var m = function(a) {
        this.TERMINAL = a, this.element = document.createElement("div"), this.initialize();
    };
    m.prototype.initialize = function() {
        this.element.className = "terminalHint";
    }, m.prototype.show = function(a, b, c) {
        this.element.innerHTML = c, this.element.style.top = this.TERMINAL.output.getLineByIndex(b).getElement().offsetTop + "px", 
        this.element.style.left = (a - 1) * this.TERMINAL.output.SYMBOL_PIXEL_WIDTH + "px", 
        this.TERMINAL.elements.output.appendChild(this.element);
    }, m.prototype.hide = function() {
        this.element.parentNode && this.element.parentNode.removeChild(this.element);
    };
    var n = function(a) {
        this.TERMINAL = a, this.ENABLED = !1, this.history = new p(this), this.caret = new o(this), 
        this._autocompleteVariants = [], this._currentAutocompleteVariant = 0, this._autocompleteHint = new m(this.TERMINAL), 
        this.__inputLastLength = 0, this._handler = null, this.INITIAL_POSITION = {
            line: 0,
            position: 0
        }, this.initialize();
    };
    n.prototype.initialize = function() {
        var a = this;
        window.addEventListener("keypress", function() {
            a.ENABLED && document.activeElement !== a.TERMINAL.elements.input && a.focus();
        }), this.TERMINAL.elements.terminal.addEventListener("touchend", function(b) {
            a.ENABLED && document.getSelection().isCollapsed && (b.preventDefault(), a.focus());
        }), this.TERMINAL.elements.input.addEventListener("input", function() {
            a.ENABLED && a._onInput();
        }), this.TERMINAL.elements.input.addEventListener("keydown", function(b) {
            a.ENABLED && a.keyDown(b);
        });
    }, n.prototype.focus = function() {
        this.TERMINAL.elements.input.blur(), this.TERMINAL.elements.input.focus();
    }, n.prototype.set = function(a) {
        var b, c = this.TERMINAL.elements.input;
        c.value = a, b = c.value.length, this._onInput(), setTimeout(function() {
            c.setSelectionRange(b, b);
        }, 1);
    }, n.prototype._enable = function() {
        this.ENABLED = !0, this.TERMINAL.elements.input.removeAttribute("disabled"), this.focus(), 
        this.caret.update();
    }, n.prototype._disable = function() {
        this.TERMINAL.elements.input.setAttribute("disabled", ""), this.ENABLED = !1, this.caret.hide();
    }, n.prototype.getCaretPosition = function() {
        return "undefined" != typeof this.TERMINAL.elements.input.selectionStart ? this.TERMINAL.elements.input.selectionStart : this.TERMINAL.elements.input.value.length;
    }, n.prototype.get = function() {
        return this.TERMINAL.elements.input.value;
    }, n.prototype.setCaretPosition = function(a) {
        this.TERMINAL.elements.input.selectionStart = this.TERMINAL.elements.input.selectionEnd = a;
    }, n.prototype.complete = function() {
        var a = this.getCurrentAutocompleteVariant(), b = this.getCaretPosition();
        a && (this.set(this.get().splice(b, 0, a)), this.setCaretPosition(b + a.length), 
        this._onInput());
    }, n.prototype.getCurrentAutocompleteVariant = function() {
        return this._autocompleteVariants[this._currentAutocompleteVariant] || "";
    }, n.prototype._changeAutocompleteVariant = function(a) {
        this._currentAutocompleteVariant = (this._currentAutocompleteVariant + a) % this._autocompleteVariants.length, 
        this._currentAutocompleteVariant < 0 && (this._currentAutocompleteVariant += this._autocompleteVariants.length), 
        this._updateAutocompleteView();
    }, n.prototype._updateAutocompleteView = function() {
        var a = this.getCurrentAutocompleteVariant();
        return a ? void this._autocompleteHint.show((this.INITIAL_POSITION.position + this.getCaretPosition()) % this.TERMINAL.output.WIDTH + 1, this.INITIAL_POSITION.line + Math.floor((this.INITIAL_POSITION.position + this.getCaretPosition()) / this.TERMINAL.output.WIDTH), a) : void this._autocompleteHint.hide();
    }, n.prototype._onInput = function() {
        var a, b, c, d = "", e = this.TERMINAL.elements.input.value, f = e.length;
        for (this._autocompleteVariants = this.TERMINAL.autocomplete.getEndings(e.substring(0, this.getCaretPosition())), 
        this.TERMINAL.output.printAtLine(this.TERMINAL.parser.highlightSyntax(e), this.INITIAL_POSITION.line, this.INITIAL_POSITION.position, !1), 
        a = 0; a < this.__inputLastLength - f; a++) d += " ";
        b = this.TERMINAL.output.getCaretX(), c = this.TERMINAL.output.getCaretY(), this.TERMINAL.output.$CARET_RESTRICTION_ON = !1, 
        this.TERMINAL.output.printSync(d), this.TERMINAL.output.$CARET_RESTRICTION_ON = !0, 
        this.TERMINAL.output.getCaretY() < 1 && this.TERMINAL.output.increaseTopLine(this.TERMINAL.output.getCaretY() - 1), 
        this.TERMINAL.output.setCaretX(b), this.TERMINAL.output.setCaretY(c), this.__inputLastLength = f + this.getCurrentAutocompleteVariant().length, 
        f === this.TERMINAL.elements.input.maxLength && this.submit(), this.TERMINAL.output.scrollToActualLine(), 
        this._updateAutocompleteView(), this.caret.update();
    }, n.prototype.keyDown = function(a) {
        var b = a.charCode || a.keyCode, c = this;
        switch (b) {
          case 9:
            this.complete(), a.preventDefault();
            break;

          case 13:
            this.set(this.TERMINAL.definitions.replace(this.TERMINAL.elements.input.value)), 
            this.submit();
            break;

          case 16:
            break;

          case 17:
            this._changeAutocompleteVariant(1 !== a.location ? -1 : 1);
            break;

          case 35:
            setTimeout(function() {
                c._onInput();
            }, 1);
            break;

          case 36:
            setTimeout(function() {
                c._onInput();
            }, 1);
            break;

          case 37:
            setTimeout(function() {
                c._onInput();
            }, 1);
            break;

          case 39:
            setTimeout(function() {
                c._onInput();
            }, 1);
        }
    }, n.prototype.submit = function() {
        var a = this.TERMINAL.elements.input.value, b = this._handler;
        this._disable(), this.history.save(a), this.TERMINAL.elements.input.value = "", 
        this.__inputLastLength = 0, this._autocompleteVariants = [], "function" == typeof b ? (this._handler = null, 
        b.call(this, a)) : this.TERMINAL.controller.terminalQuery(a), this._updateAutocompleteView();
    }, n.prototype.limitLength = function(a) {
        this.TERMINAL.elements.input.maxLength = a;
    }, n.prototype.prompt = function(a, b, c) {
        c && (this._handler && console.warn("Possible wrong handler usage."), this._handler = c), 
        this.limitLength(b || 32656), this.TERMINAL.output.printSync(a || ""), this.INITIAL_POSITION.line = this.TERMINAL.output.getLineNumber(), 
        this.INITIAL_POSITION.position = this.TERMINAL.output.getCaretX() - 1, this._enable();
    };
    var o = function(a) {
        this.INPUT = a, this._element = document.createElement("div"), this.initialize();
    };
    o.prototype.CARET_CLASS_NAME = "terminalCaret", o.prototype.initialize = function() {
        this._element.className = this.CARET_CLASS_NAME;
    }, o.prototype.update = function() {
        var a = this.INPUT.TERMINAL.output.getLineByIndex(this.INPUT.INITIAL_POSITION.line + Math.floor((this.INPUT.INITIAL_POSITION.position + this.INPUT.getCaretPosition()) / this.INPUT.TERMINAL.output.WIDTH));
        return a ? (this._element.style.left = (this.INPUT.INITIAL_POSITION.position + this.INPUT.TERMINAL.elements.input.selectionStart) % this.INPUT.TERMINAL.output.WIDTH * this.INPUT.TERMINAL.output.SYMBOL_PIXEL_WIDTH + "px", 
        this._element.style.top = a.getElement().offsetTop + "px", void this.INPUT.TERMINAL.elements.output.appendChild(this._element)) : void console.warn("Cannot get current terminal line element.");
    }, o.prototype.hide = function() {
        this._element.parentNode && this._element.parentNode.removeChild(this._element);
    };
    var p = function(a) {
        this.INPUT = a, this._history = [ "" ], this._currentPosition = 0, this.initialize();
    };
    p.prototype.STORAGE_NAME = "inputHistory", p.prototype.MAX_STACK_SIZE = 200, p.prototype.initialize = function() {
        var a = this, b = this.INPUT.TERMINAL.storage.get(this.STORAGE_NAME);
        window.addEventListener("keydown", function(b) {
            38 === b.keyCode ? (a.seek(-1), a.INPUT.set(a.getCurrent())) : 40 === b.keyCode && (a.seek(1), 
            a.INPUT.set(a.getCurrent()));
        }), window.addEventListener("beforeunload", function() {
            a.INPUT.TERMINAL.storage.set(a.STORAGE_NAME, a.exportJSON());
        }), b && (this.importJSON(b), this._currentPosition = this._history.length - 1);
    }, p.prototype.importJSON = function(a) {
        var b, c;
        try {
            b = JSON.parse(a);
            for (c in this) this.hasOwnProperty(c) && (this[c] = b[c] || this[c]);
        } catch (d) {
            console.error(d);
        }
    }, p.prototype.exportJSON = function() {
        return JSON.stringify({
            _history: this._history
        });
    }, p.prototype.seek = function(a) {
        this._currentPosition = (a + this._currentPosition) % this._history.length, this._currentPosition < 0 && (this._currentPosition += this._history.length);
    }, p.prototype.get = function(a) {
        return this._history[a] || "";
    }, p.prototype.save = function(a) {
        this._history[this._history.length - 2] !== a && "" !== a && (this._history[this._history.length - 1] = a, 
        this._history.push(""), this._history.length > this.MAX_STACK_SIZE && this._history.splice(0, 1), 
        this._currentPosition = this._history.length - 1);
    }, p.prototype.getCurrent = function() {
        return this._history[this._currentPosition] || "";
    }, p.prototype.load = function(a) {
        return this._currentPosition += a, this._currentPosition < 0 && (this._currentPosition = history.length - 1), 
        this._currentPosition >= history.length && (this._currentPosition = 0), this.getCurrent();
    };
    var q = function(a) {
        var b = this._TERMINAL = a;
        this.AVAILABLE_LOCALIZATIONS = {
            en: "en",
            ru: "ru"
        }, this._currentLocalization = this.AVAILABLE_LOCALIZATIONS.en, this._LOCALIZATION_BASE = {
            1: {
                en: "Cach\xe9 WEB Terminal v" + b.VERSION + "\r\n\r\n\x1b[4mAvailable commands:\x1b[0m\r\n\x1b[33m/help\x1b[0m\x1b[32GShow the help information you are reading now.\r\n\x1b[33m/autocomplete\x1b[0m [gen]\x1b[32GPerforms autocomplete data loading. The autocomplete files will be generated only the first time command execute. If you did some changes in your code and want to rebuild autocomplete database, use \x1b[1mgen\x1b[0m parameter.\r\n\x1b[33m/echo\x1b[0m [param1] [param2] ...\x1b[32GEcho each argument of this command.\r\n\x1b[33m/trace\x1b[0m [global/filePath]\x1b[32GStart tracing global or file. To stop tracing, enter command without arguments. To stop tracing particular file or global, enter trace command again.\r\n\x1b[33m/sql\x1b[0m\x1b[32GEnter or exit SQL mode.\r\n\x1b[33m/reset\x1b[0m\x1b[32GReset terminal application to defaults.\r\n{command} \x1b[33m/favorite\x1b[0m {phrase}\x1b[32GSave command for future use.\r\n\x1b[33m/favorite\x1b[0m {phrase}\x1b[32GLoad previously saved command.\r\n{definition} \x1b[33m/define\x1b[0m {phrase}\x1b[32GReplace each next {phrase} with {definition}. To get more information, call command without parameters.\r\n\x1b[33m/version\x1b[0m\x1b[32GOutput terminal application version.\r\n\x1b[33m/update\x1b[0m\x1b[32GCheck for updates and prompt to update if new version available.\r\n\x1b[33m/settings\x1b[0m\x1b[32GShow or change terminal settings.\r\n\r\n\x1b[4mControl keys:\x1b[0m\r\n\x1b[33mTAB\x1b[0m\x1b[32GComplete input if autocomplete variant available.\r\n\x1b[33mCTRL\x1b[0m\x1b[32GLeft/right control will switch next/previous available autocomplete variant.\r\n",
                ru: "Cach\xe9 WEB Terminal v" + b.VERSION + "\r\n\r\n\x1b[4m\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b:\x1b[0m\r\n\x1b[33m/help\x1b[0m\x1b[32G\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0441\u043f\u043e\u043c\u0430\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0441\u0435\u0439\u0447\u0430\u0441 \u0447\u0438\u0442\u0430\u0435\u0442\u0435.\r\n\x1b[33m/autocomplete\x1b[0m [gen]\x1b[32G\u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0424\u0430\u0439\u043b\u044b \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b. \u0415\u0441\u043b\u0438 \u0432\u044b \u0432\u043d\u0435\u0441\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0432\u0430\u0448 \u043a\u043e\u0434 \u0438\u043b\u0438 \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \x1b[1mgen\x1b[0m.\r\n\x1b[33m/echo\x1b[0m [\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u04401] [\u0432\u0442\u043e\u0440\u043e\u0439] ...\x1b[32G\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b.\r\n\x1b[33m/trace\x1b[0m [\u0433\u043b\u043e\u0431\u0430\u043b/\u043f\u0443\u0442\u044c]\x1b[32G\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u0437\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u0444\u0430\u0439\u043b\u0435 \u0438\u043b\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u0435. \u0427\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0442\u044c \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u0437\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0443 \u0435\u0449\u0451 \u0440\u0430\u0437. \u041a\u043e\u043c\u043c\u0430\u043d\u0434\u0430 \u0431\u0435\u0437 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0435 \u0437\u0430 \u0432\u0441\u0435\u043c\u0438 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u0430\u043c\u0438.\r\n\x1b[33m/sql\x1b[0m\x1b[32G\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u0438\u043b\u0438 \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 SQL-\u0440\u0435\u0436\u0438\u043c\u0430.\r\n\x1b[33m/reset\x1b[0m\x1b[32G\u0412\u0435\u0440\u043d\u0443\u0442\u044c \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0432 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435.\r\n{\u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0430} \x1b[33m/favorite\x1b[0m {\u0444\u0440\u0430\u0437\u0430}\x1b[32G\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f.\r\n\x1b[33m/favorite\x1b[0m {\u0444\u0440\u0430\u0437\u0430}\x1b[32G\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0440\u0430\u043d\u0435\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0443.\r\n{\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435} \x1b[33m/define\x1b[0m {\u0444\u0440\u0430\u0437\u0430}\x1b[32G\u0417\u0430\u043c\u0435\u043d\u044f\u0442\u044c \u043a\u0443\u0436\u0434\u0443\u044e {\u0444\u0440\u0430\u0437\u0443} {\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c}. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0432\u044b\u0437\u043e\u0432\u0438\u0442\u0435 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0443 \u0431\u0435\u0437 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432.\r\n\x1b[33m/version\x1b[0m\x1b[32G\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430.\r\n\x1b[33m/update\x1b[0m\x1b[32G\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 \u0441\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043d\u0443\u0436\u043d\u043e\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f.\r\n\x1b[33m/settings\x1b[0m\x1b[32G\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430.\r\n\r\n\x1b[4m\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438:\x1b[0m\r\n\x1b[33mTAB\x1b[0m\x1b[32G\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0432\u0432\u043e\u0434, \u0435\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\r\n\x1b[33mCTRL\x1b[0m\x1b[32G\u041b\u0435\u0432\u044b\u0439/\u043f\u0440\u0430\u0432\u044b\u0439 CTRL \u043f\u0435\u0440\u0435\u0439\u0434\u0451\u0442 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443/\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u043c\u0443 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443 \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\r\n"
            },
            2: {
                en: "Connection to Cach\xe9 Server established.",
                ru: "\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Cach\xe9 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e."
            },
            3: {
                en: "Unable to send data to server.",
                ru: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440."
            },
            4: {
                en: "WebSocket connection closed. Code %n, reason: %s.",
                ru: "\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 WebSocket \u0437\u0430\u043a\u0440\u044b\u0442\u043e. \u041a\u043e\u0434 %n, \u043f\u0440\u0438\u0447\u0438\u043d\u0430: %s."
            },
            5: {
                en: "Unable to trace %s.",
                ru: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u0437\u0430 %s."
            },
            6: {
                en: "WebSocket connection error (%s). Trying to connect again in %n seconds...",
                ru: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f WebSocket (%s). \u041f\u043e\u0432\u0442\u043e\u0440\u043d\u0430\u044f \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 %n \u0441\u0435\u043a\u0443\u043d\u0434..."
            },
            7: {
                en: "Start tracing %s.",
                ru: "\u041d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0435 \u0437\u0430 %s \u043d\u0430\u0447\u0430\u0442\u043e."
            },
            8: {
                en: "Stop tracing %s.",
                ru: "\u041d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0435 \u0437\u0430 %s \u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u043e."
            },
            9: {
                en: "Refresh page to apply reset.",
                ru: "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0431\u0440\u043e\u0441."
            },
            10: {
                en: "Authorization successful.",
                ru: "\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e."
            },
            11: {
                en: "Usage:\r\n{your command} \x1b[1m/favorite\x1b[0m {name}\x1b[35GTo save command.\r\n\x1b[1m/favorite\x1b[0m {name} \x1b[35GTo load command.\r\nPreviously saved names: %s.",
                ru: "\u0423\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435:\r\n{\u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0430} \x1b[1m/favorite\x1b[0m {\u0438\u043c\u044f}\x1b[35G\u0414\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b.\r\n\x1b[1m/favorite\x1b[0m {\u0438\u043c\u044f} \x1b[35G\u0414\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b.\r\n\u0420\u0430\u043d\u0435\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b \u043f\u043e\u0434 \u0438\u043c\u0435\u043d\u0430\u043c\u0438: %s."
            },
            12: {
                en: 'No command saved for "%s".\r\nPreviously saved: %s.',
                ru: '\u041a\u043e\u043c\u043c\u0430\u043d\u0434\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c "%s" \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430.\r\n\u0420\u0430\u043d\u0435\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0435: %s.'
            },
            13: {
                en: "%s\x1b[1m defined as \x1b[0m%s",
                ru: "%s\x1b[1m \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u043a\u0430\u043a \x1b[0m%s"
            },
            14: {
                en: "Definitions removed.",
                ru: "\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u044b."
            },
            15: {
                en: '\x1b[4mUsage:\x1b[0m\r\n\x1b[1m/define\x1b[0m {everything} {phrase}\x1b[35GTo define {phrase} as {everything}.\r\n\x1b[1m/define\x1b[0m clear\x1b[35GClears all definitions.\r\n\x1b[4mExample:\x1b[0m \x1b[2m##class(%Library.File).Exists( \x1b[0m\x1b[1m/define\x1b[0m \x1b[2m?f(\x1b[0m \r\nThis will set shorten expression for checking if file exists. Then, commands like \x1b[2mw ?f("C:")\x1b[0m will be automatically replaced with \x1b[2mw ##class(%Library.File).Exists("C:")\x1b[0m when submitting. To clear definitions, give "clear" parameter.\r\n\x1b[4mList of definitions:\x1b[0m %s.',
                ru: '\x1b[4m\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\x1b[0m\r\n\x1b[1m/define\x1b[0m {\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435} {\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435}\x1b[35G\u041a\u0430\u0436\u0434\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 {\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f} \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u0432\u043e\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u043e \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 {\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435}.\r\n\x1b[1m/define\x1b[0m clear\x1b[35G\u0423\u0434\u0430\u043b\u0438\u0442 \u0432\u0441\u0435 \u0440\u0430\u043d\u0435\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f.\r\n\x1b[4m\u041f\u0440\u0438\u043c\u0435\u0440:\x1b[0m \x1b[2m##class(%Library.File).Exists( \x1b[0m\x1b[1m/define\x1b[0m \x1b[2m?f(\x1b[0m \r\n\u042d\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0441\u043e\u043a\u0440\u0430\u0449\u0451\u043d\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430. \u041f\u043e\u0441\u043b\u0435, \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b \u0432\u0438\u0434\u0430 \x1b[2mw ?f("C:")\x1b[0m \u0431\u0443\u0434\u0443\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0432 \x1b[2mw ##class(%Library.File).Exists("C:")\x1b[0m \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435. \u0427\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0435\u0434\u0430\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 "clear".\r\n\x1b[4m\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0439:\x1b[0m %s.'
            },
            16: {
                en: "Cach\xe9 WEB Terminal v%s\r\nChecking for updates...",
                ru: "Cach\xe9 WEB Terminal v%s\r\n\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439..."
            },
            17: {
                en: 'Unknown internal command "%s".',
                ru: '\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044f\u044f \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0430 "%s".'
            },
            18: {
                en: "Merging autocomplete database for %s...",
                ru: "\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f %s..."
            },
            19: {
                en: "Classes merged: %n",
                ru: "\u041a\u043b\u0430\u0441\u0441\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043e: %n"
            },
            20: {
                en: "Globals merged: %n",
                ru: "\u0413\u043b\u043e\u0431\u0430\u043b\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043e: %n"
            },
            21: {
                en: "No autocomplete file found on server. Requesting...",
                ru: "\u0424\u0430\u0439\u043b \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d. \u0417\u0430\u043f\u0440\u043e\u0441 \u0444\u0430\u0439\u043b\u0430..."
            },
            22: {
                en: "Authorization failed.",
                ru: "\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u0443\u0434\u0430\u043b\u0430\u0441\u044c."
            },
            23: {
                en: "A new version of Cach\xe9 WEB Terminal available. Would youlike to install it? (Make sure that user has write permission to CACHELIB database) (Y/N)",
                ru: "\u041d\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f Cach\xe9 WEB Terminal \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430. \u0425\u043e\u0442\u0438\u0442\u0435 \u043b\u0438 \u0432\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0435\u0451? (\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 CACHELIB) (Y/N)"
            },
            24: {
                en: "Updating...",
                ru: "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435..."
            },
            25: {
                en: "Cach\xe9 WEB Terminal is up-to-date.",
                ru: "\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0432\u0435\u0440\u0441\u0438\u044f Cach\xe9 WEB Terminal."
            },
            26: {
                en: "\x1b[4mCurrent settings:\x1b[0m\r\n%s = %s\r\nTo change values, enter command with argument \x1b[3m{NAME}={VALUE}\x1b[0m.",
                ru: "\x1b[4m\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438:\x1b[0m\r\n%s = %s\r\n\u0427\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u0443 \u0441 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c \x1b[3m{\u0418\u041c\u042f}={\u0417\u041d\u0410\u0427\u0415\u041d\u0418\u0415}\x1b[0m."
            },
            27: {
                en: "Terminal locale changed to %s.",
                ru: "\u042f\u0437\u044b\u043a \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430 \u0438\u0437\u043c\u0435\u043d\u0451\u043d \u043d\u0430 %s."
            },
            28: {
                en: "Unable to change locale to %s.",
                ru: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u044f\u0437\u044b\u043a \u043d\u0430 %s."
            }
        }, this.initialize();
    };
    q.prototype.STORAGE_NAME = "localization", q.prototype.initialize = function() {
        var a = this._TERMINAL.storage.get(this.STORAGE_NAME);
        a && this.AVAILABLE_LOCALIZATIONS.hasOwnProperty(a) || (a = navigator.language, 
        this.AVAILABLE_LOCALIZATIONS.hasOwnProperty(a) || (a = "en")), this.setLocale(a);
    }, q.prototype.get = function(a) {
        var b = 0, c = arguments;
        return (this._LOCALIZATION_BASE[a] ? this._LOCALIZATION_BASE[a][this._currentLocalization] || "[no available localization of [" + a + '] for "' + this._currentLocalization + '"]' : "[translation [" + a + "] not found]").replace(/%[sn]/g, function(a) {
            return "undefined" != typeof c[++b] ? "s" === a.charAt(1) ? c[b].toString() : parseFloat(c[b]) + "" : a;
        });
    }, q.prototype.setLocale = function(a) {
        return this.AVAILABLE_LOCALIZATIONS.hasOwnProperty(a) ? (this._currentLocalization = a, 
        this._TERMINAL.storage.set(this.STORAGE_NAME, a), !0) : (console.error('No available translations for "' + a + '". Please, check available languages at CacheDictionary file.'), 
        !1);
    }, q.prototype.getLocale = function() {
        return this._currentLocalization;
    };
    var r = function(a) {
        this.TERMINAL = a, this._stack = "", this._TOP_LINE_INDEX = 0, this.SYMBOL_PIXEL_WIDTH = 0, 
        this.SYMBOL_PIXEL_HEIGHT = 0, this.CONTROL_SEQUENCE_PATTERN = /[\x00-\x1A]|\x1b\[?[^@-~]*[@-~]/g, 
        this.CURRENT_GRAPHIC_RENDITION = {}, this._lines = [], this._caret = {
            x: 1,
            y: 1
        }, this._tabs = {}, this.$CARET_RESTRICTION_ON = !0, this.WIDTH = 0, this.HEIGHT = 0, 
        this.STACK_REFRESH_INTERVAL = 25, this.initialize();
    };
    r.prototype.LINE_CLASSNAME = "terminalLine", r.prototype.COLOR_8BIT = {
        "0": "#000000",
        "1": "#800000",
        "2": "#008000",
        "3": "#808000",
        "4": "#000080",
        "5": "#800080",
        "6": "#008080",
        "7": "#c0c0c0",
        "8": "#808080",
        "9": "#ff0000",
        "10": "#00ff00",
        "11": "#ffff00",
        "12": "#0000ff",
        "13": "#ff00ff",
        "14": "#00ffff",
        "15": "#ffffff",
        "16": "#000000",
        "17": "#00005f",
        "18": "#000087",
        "19": "#0000af",
        "20": "#0000df",
        "21": "#0000ff",
        "22": "#005f00",
        "23": "#005f5f",
        "24": "#005f87",
        "25": "#005faf",
        "26": "#005fdf",
        "27": "#005fff",
        "28": "#008700",
        "29": "#00875f",
        "30": "#008787",
        "31": "#0087af",
        "32": "#0087df",
        "33": "#0087ff",
        "34": "#00af00",
        "35": "#00af5f",
        "36": "#00af87",
        "37": "#00afaf",
        "38": "#00afdf",
        "39": "#00afff",
        "40": "#00df00",
        "41": "#00df5f",
        "42": "#00df87",
        "43": "#00dfaf",
        "44": "#00dfdf",
        "45": "#00dfff",
        "46": "#00ff00",
        "47": "#00ff5f",
        "48": "#00ff87",
        "49": "#00ffaf",
        "50": "#00ffdf",
        "51": "#00ffff",
        "52": "#5f0000",
        "53": "#5f005f",
        "54": "#5f0087",
        "55": "#5f00af",
        "56": "#5f00df",
        "57": "#5f00ff",
        "58": "#5f5f00",
        "59": "#5f5f5f",
        "60": "#5f5f87",
        "61": "#5f5faf",
        "62": "#5f5fdf",
        "63": "#5f5fff",
        "64": "#5f8700",
        "65": "#5f875f",
        "66": "#5f8787",
        "67": "#5f87af",
        "68": "#5f87df",
        "69": "#5f87ff",
        "70": "#5faf00",
        "71": "#5faf5f",
        "72": "#5faf87",
        "73": "#5fafaf",
        "74": "#5fafdf",
        "75": "#5fafff",
        "76": "#5fdf00",
        "77": "#5fdf5f",
        "78": "#5fdf87",
        "79": "#5fdfaf",
        "80": "#5fdfdf",
        "81": "#5fdfff",
        "82": "#5fff00",
        "83": "#5fff5f",
        "84": "#5fff87",
        "85": "#5fffaf",
        "86": "#5fffdf",
        "87": "#5fffff",
        "88": "#870000",
        "89": "#87005f",
        "90": "#870087",
        "91": "#8700af",
        "92": "#8700df",
        "93": "#8700ff",
        "94": "#875f00",
        "95": "#875f5f",
        "96": "#875f87",
        "97": "#875faf",
        "98": "#875fdf",
        "99": "#875fff",
        "100": "#878700",
        "101": "#87875f",
        "102": "#878787",
        "103": "#8787af",
        "104": "#8787df",
        "105": "#8787ff",
        "106": "#87af00",
        "107": "#87af5f",
        "108": "#87af87",
        "109": "#87afaf",
        "110": "#87afdf",
        "111": "#87afff",
        "112": "#87df00",
        "113": "#87df5f",
        "114": "#87df87",
        "115": "#87dfaf",
        "116": "#87dfdf",
        "117": "#87dfff",
        "118": "#87ff00",
        "119": "#87ff5f",
        "120": "#87ff87",
        "121": "#87ffaf",
        "122": "#87ffdf",
        "123": "#87ffff",
        "124": "#af0000",
        "125": "#af005f",
        "126": "#af0087",
        "127": "#af00af",
        "128": "#af00df",
        "129": "#af00ff",
        "130": "#af5f00",
        "131": "#af5f5f",
        "132": "#af5f87",
        "133": "#af5faf",
        "134": "#af5fdf",
        "135": "#af5fff",
        "136": "#af8700",
        "137": "#af875f",
        "138": "#af8787",
        "139": "#af87af",
        "140": "#af87df",
        "141": "#af87ff",
        "142": "#afaf00",
        "143": "#afaf5f",
        "144": "#afaf87",
        "145": "#afafaf",
        "146": "#afafdf",
        "147": "#afafff",
        "148": "#afdf00",
        "149": "#afdf5f",
        "150": "#afdf87",
        "151": "#afdfaf",
        "152": "#afdfdf",
        "153": "#afdfff",
        "154": "#afff00",
        "155": "#afff5f",
        "156": "#afff87",
        "157": "#afffaf",
        "158": "#afffdf",
        "159": "#afffff",
        "160": "#df0000",
        "161": "#df005f",
        "162": "#df0087",
        "163": "#df00af",
        "164": "#df00df",
        "165": "#df00ff",
        "166": "#df5f00",
        "167": "#df5f5f",
        "168": "#df5f87",
        "169": "#df5faf",
        "170": "#df5fdf",
        "171": "#df5fff",
        "172": "#df8700",
        "173": "#df875f",
        "174": "#df8787",
        "175": "#df87af",
        "176": "#df87df",
        "177": "#df87ff",
        "178": "#dfaf00",
        "179": "#dfaf5f",
        "180": "#dfaf87",
        "181": "#dfafaf",
        "182": "#dfafdf",
        "183": "#dfafff",
        "184": "#dfdf00",
        "185": "#dfdf5f",
        "186": "#dfdf87",
        "187": "#dfdfaf",
        "188": "#dfdfdf",
        "189": "#dfdfff",
        "190": "#dfff00",
        "191": "#dfff5f",
        "192": "#dfff87",
        "193": "#dfffaf",
        "194": "#dfffdf",
        "195": "#dfffff",
        "196": "#ff0000",
        "197": "#ff005f",
        "198": "#ff0087",
        "199": "#ff00af",
        "200": "#ff00df",
        "201": "#ff00ff",
        "202": "#ff5f00",
        "203": "#ff5f5f",
        "204": "#ff5f87",
        "205": "#ff5faf",
        "206": "#ff5fdf",
        "207": "#ff5fff",
        "208": "#ff8700",
        "209": "#ff875f",
        "210": "#ff8787",
        "211": "#ff87af",
        "212": "#ff87df",
        "213": "#ff87ff",
        "214": "#ffaf00",
        "215": "#ffaf5f",
        "216": "#ffaf87",
        "217": "#ffafaf",
        "218": "#ffafdf",
        "219": "#ffafff",
        "220": "#ffdf00",
        "221": "#ffdf5f",
        "222": "#ffdf87",
        "223": "#ffdfaf",
        "224": "#ffdfdf",
        "225": "#ffdfff",
        "226": "#ffff00",
        "227": "#ffff5f",
        "228": "#ffff87",
        "229": "#ffffaf",
        "230": "#ffffdf",
        "231": "#ffffff",
        "232": "#080808",
        "233": "#121212",
        "234": "#1c1c1c",
        "235": "#262626",
        "236": "#303030",
        "237": "#3a3a3a",
        "238": "#444444",
        "239": "#4e4e4e",
        "240": "#585858",
        "241": "#606060",
        "242": "#666666",
        "243": "#767676",
        "244": "#808080",
        "245": "#8a8a8a",
        "246": "#949494",
        "247": "#9e9e9e",
        "248": "#a8a8a8",
        "249": "#b2b2b2",
        "250": "#bcbcbc",
        "251": "#c6c6c6",
        "252": "#d0d0d0",
        "253": "#dadada",
        "254": "#e4e4e4",
        "255": "#eeeeee"
    }, r.prototype.initialize = function() {
        var a, b = this;
        for (setInterval(function() {
            b.freeStack();
        }, this.STACK_REFRESH_INTERVAL), window.addEventListener("resize", function() {
            b.sizeChanged();
        }), this.sizeChanged(), a = 9; a < this.WIDTH; a += 8) this.setTab(a);
    }, r.prototype.setTab = function(a) {
        this._tabs[a] = !0;
    }, r.prototype.clearTab = function(a) {
        a ? delete this._tabs[a] : this._tabs = {};
    }, r.prototype.setCaretX = function(a) {
        return this._caret.x = Math.max(1, Math.min(this.WIDTH, a)), a === this._caret.x;
    }, r.prototype.setCaretY = function(a) {
        return this._caret.y = this.$CARET_RESTRICTION_ON ? Math.max(1, Math.min(this.HEIGHT, a)) : a, 
        a === this._caret.y;
    }, r.prototype.increaseTopLine = function(a) {
        this._TOP_LINE_INDEX += Math.round(a), this._TOP_LINE_INDEX < 0 && (this._TOP_LINE_INDEX = 0, 
        console.warn("_TOP_LINE_INDEX = 0 bottom restriction applied."));
    }, r.prototype.getCaretX = function() {
        return this._caret.x;
    }, r.prototype.getCaretY = function() {
        return this._caret.y;
    }, r.prototype._controlCharacters = {
        "\x00": function() {},
        "	": function() {
            for (var a = this.getCaretX(); a < this.WIDTH; a++) if (this._tabs.hasOwnProperty(a.toString())) {
                this.setCaretX(a);
                break;
            }
        },
        "\n": function() {
            this._caret.y === this.HEIGHT && this.scrollDisplay(1), this.setCaretY(this._caret.y + 1);
        },
        "\r": function() {
            this.setCaretX(1);
        }
    }, r.prototype._controlSequences = {
        m: function(a, b) {
            var c, d = b.split(";").map(function(a) {
                return parseInt(a, 10);
            });
            for (c = 0; c < d.length; c++) 38 === d[c] && 5 === d[c + 1] ? (this.setGraphicRendition(38, "color: " + this.COLOR_8BIT[d[c + 2]]), 
            c += 2) : 48 === d[c] && 5 === d[c + 1] ? (this.setGraphicRendition(48, "background-color: " + this.COLOR_8BIT[d[c + 2]]), 
            c += 2) : this.setGraphicRendition(d[c] || 0);
        },
        A: function(a, b) {
            this.setCaretY(this.getCaretY() - (parseInt(b) || 1));
        },
        B: function(a, b) {
            this.setCaretY(this.getCaretY() + (parseInt(b) || 1));
        },
        C: function(a, b) {
            this.setCaretX(this.getCaretX() + (parseInt(b) || 1));
        },
        D: function(a, b) {
            this.setCaretX(this.getCaretX() - (parseInt(b) || 1));
        },
        f: function(a, b) {
            var c = b.split(";");
            this.setCaretX(parseInt(c[1] || 1)), this.setCaretY(parseInt(c[0] || 1));
        },
        H: function(a, b) {
            "[" === a.charAt(1) ? this._controlSequences.f.call(this, a, b) : this.setTab(this.getCaretX());
        },
        g: function(a, b) {
            "3" === b ? this.clearTab() : this.clearTab(this.getCaretX());
        },
        G: function(a, b) {
            this.setCaretX(parseInt(b) || 1);
        }
    }, r.prototype.scrollDisplay = function(a) {
        a > 0 ? this._TOP_LINE_INDEX += a : console.warn("Todo: scroll up");
    }, r.prototype.anyGraphicRenditionSet = function() {
        var a;
        for (a in this.CURRENT_GRAPHIC_RENDITION) if (this.CURRENT_GRAPHIC_RENDITION.hasOwnProperty(a)) return !0;
        return !1;
    }, r.prototype.setGraphicRendition = function(a, b) {
        0 === a ? this.CURRENT_GRAPHIC_RENDITION = {} : this.CURRENT_GRAPHIC_RENDITION[a] = b ? {
            style: b
        } : a;
    }, r.prototype.applyControlSequence = function(a) {
        var b, c;
        (b = a.match(/[\x00-\x1A]/)) ? this._controlCharacters.hasOwnProperty(b[0]) && this._controlCharacters[b[0]].call(this) : (b = a.match(/\x1b\[?([^@-~]*)([@-~])/)) && (c = b[2], 
        this._controlSequences.hasOwnProperty(c) && this._controlSequences[c].call(this, b[0], b[1]));
    }, r.prototype.getTopLine = function() {
        var a;
        for (a = this._lines.length; a <= this._TOP_LINE_INDEX; a++) this._lines[a] = new s(this);
        return this._lines[this._TOP_LINE_INDEX];
    }, r.prototype.getCurrentLine = function() {
        return this.getLineByCursorY(this.getCaretY());
    }, r.prototype.newLineSequence = function() {
        this.applyControlSequence("\r"), this.applyControlSequence("\n");
    }, r.prototype.getLineNumber = function() {
        return this._TOP_LINE_INDEX + this._caret.y - 1;
    }, r.prototype._spawnLines = function(a) {
        for (;a > 0; a--) this._lines.push(new s(this));
    }, r.prototype._printPlainText = function(a) {
        var b, c;
        do b = this.getCurrentLine(), c = a.length, a = b.writePlain(a, this._caret.x - 1), 
        c -= a.length, a ? this.newLineSequence() : this.setCaretX(this._caret.x + c) || this.newLineSequence(); while (a);
    }, r.prototype._output = function(a) {
        var b, c = a || "", d = 0, e = this;
        a = a || "", a.replace(this.CONTROL_SEQUENCE_PATTERN, function(a, b, f) {
            var g = f.substring(d, b);
            return d || (c = f), d = b + a.length, g && e._printPlainText(g), e.applyControlSequence(a), 
            "";
        }), b = c.substring(d, c.length), b && this._printPlainText(b);
    }, r.prototype.print = function(a) {
        this._stack += a;
    }, r.prototype.getLineByIndex = function(a) {
        var b;
        for (b = this._lines.length; a >= b; b++) this._lines[b] = new s(this);
        return this._lines[a];
    }, r.prototype.getLineByCursorY = function(a) {
        return this.getLineByIndex(this._TOP_LINE_INDEX + (a - 1));
    }, r.prototype.printAtLine = function(a, b, c, d) {
        var e = this.$CARET_RESTRICTION_ON;
        "undefined" == typeof d && (d = !0), this.$CARET_RESTRICTION_ON = !1, this._caret.x = c + 1, 
        this._caret.y = b - this._TOP_LINE_INDEX + 1, this.printSync(a), d && (this.$CARET_RESTRICTION_ON = !0, 
        this.setCaretX(this.getCaretX()), this.setCaretY(this.getCaretY())), this.$CARET_RESTRICTION_ON = e;
    }, r.prototype.printSync = function(a) {
        this.freeStack(), this.print(a || ""), this.freeStack();
    }, r.prototype.freeStack = function() {
        var a;
        this._stack && (-1 !== (a = this._stack.lastIndexOf(String.fromCharCode(27))) && (a = this._stack.substring(a, this._stack.length)).match(this.CONTROL_SEQUENCE_PATTERN) ? (this._output(this._stack), 
        this._stack = "") : (this._output(this._stack.substring(0, this._stack.length - (a.length || 0))), 
        this._stack = -1 === a ? "" : a), this.scrollToActualLine());
    }, r.prototype.clear = function() {
        this.printSync(), this._TOP_LINE_INDEX = this._lines.length, this._spawnLines(this.HEIGHT), 
        this.scrollToActualLine(), this.setCaretX(1), this.setCaretY(1);
    }, r.prototype.scrollToActualLine = function() {
        this.TERMINAL.elements.output.scrollTop = this.getTopLine().getElement().offsetTop;
    }, r.prototype.sizeChanged = function() {
        var a, b = document.createElement("span"), c = document.createElement("div"), d = this.TERMINAL.elements.output.style.overflowY;
        this.TERMINAL.elements.output.style.overflowY = "scroll", this.TERMINAL.elements.output.appendChild(c), 
        a = this.TERMINAL.elements.output.offsetWidth - c.offsetWidth, this.TERMINAL.elements.output.style.overflowY = d, 
        b.className = this.LINE_CLASSNAME, b.innerHTML = "XXXXXXXXXX", this.TERMINAL.elements.output.appendChild(b), 
        this.SYMBOL_PIXEL_WIDTH = b.offsetWidth / 10, this.SYMBOL_PIXEL_HEIGHT = b.offsetHeight, 
        this.WIDTH = Math.floor((this.TERMINAL.elements.terminal.offsetWidth - a) / this.SYMBOL_PIXEL_WIDTH), 
        this.HEIGHT = Math.floor(this.TERMINAL.elements.terminal.offsetHeight / this.SYMBOL_PIXEL_HEIGHT), 
        this.TERMINAL.elements.output.style.width = this.WIDTH * this.SYMBOL_PIXEL_WIDTH + a + "px", 
        this.TERMINAL.elements.output.style.height = this.HEIGHT * this.SYMBOL_PIXEL_HEIGHT + "px", 
        this.TERMINAL.elements.output.removeChild(c), this.TERMINAL.elements.output.removeChild(b);
    };
    var s = function(a) {
        this.TERMINAL = a.TERMINAL, this.TERMINAL_OUTPUT = a, this._lineElement = document.createElement("div"), 
        this.linePlainText = "", this.graphicRenditionIndex = {}, this.renderTimeout = 0, 
        this.initialize();
    };
    s.prototype.initialize = function() {
        this._lineElement.className = this.TERMINAL_OUTPUT.LINE_CLASSNAME, this._lineElement.style.height = this.TERMINAL_OUTPUT.SYMBOL_PIXEL_HEIGHT + "px", 
        this.TERMINAL.elements.output.appendChild(this._lineElement);
    }, s.prototype.getElement = function() {
        return this._lineElement;
    }, s.prototype.render = function() {
        var a, b, c, d = [], e = "";
        for (a in this.graphicRenditionIndex) d.push(parseInt(a));
        for (d.sort(function(a, b) {
            return a - b;
        }), 0 !== d[0] && d.unshift(0), a = 0; a < d.length; a++) b = "", c = "", (this.graphicRenditionIndex[d[a]] || []).every(function(a) {
            return b += "term-gri" + a.index + " ", a.style && (c += (c ? ";" : "") + a.style + " "), 
            !0;
        }, this), b && (b = '<span class="' + b + '"' + (c ? 'style="' + c.replace('"', "&quot;") + '"' : "") + ">"), 
        e += b + this.linePlainText.substring(d[a] || 0, d[a + 1] || this.linePlainText.length).replace(/&/g, "&amp;").replace(/</g, "&lt;") + "</span>";
        e || (e = this.linePlainText.replace(/&/g, "&amp;").replace(/</g, "&lt;")), this._lineElement.innerHTML = e;
    }, s.prototype.writePlain = function(a, b) {
        var c, d, e = this;
        for ("undefined" == typeof b && (b = this.linePlainText.length), d = a.substr(0, this.TERMINAL_OUTPUT.WIDTH - b), 
        b > this.linePlainText.length && (this.linePlainText += new Array(b - this.linePlainText.length + 1).join(" ")), 
        this.linePlainText = this.linePlainText.splice(b, d.length, d), c = b; c < b + d.length; c++) this.graphicRenditionIndex.hasOwnProperty(c.toString()) && (this.graphicRenditionIndex[b + d.length] = (this.graphicRenditionIndex[b + d.length] || []).concat(this.graphicRenditionIndex[c]), 
        delete this.graphicRenditionIndex[c]);
        if (this.graphicRenditionIndex[b + d.length] instanceof Array) {
            for (c = 0; c < this.graphicRenditionIndex[b + d.length].length; c++) 0 === this.graphicRenditionIndex[b + d.length][c].index && (this.graphicRenditionIndex[b + d.length].splice(0, c + 1), 
            c = 0);
            this.graphicRenditionIndex[b + d.length] = this.graphicRenditionIndex[b + d.length].filter(function(a, b, d) {
                for (c = 0; b > c; c++) if (d[b].index === d[c].index) return !1;
                return !0;
            });
        }
        if (this.TERMINAL_OUTPUT.anyGraphicRenditionSet()) {
            this.graphicRenditionIndex[b] = [];
            for (c in this.TERMINAL_OUTPUT.CURRENT_GRAPHIC_RENDITION) this.graphicRenditionIndex[b].push({
                index: parseInt(c) || c,
                style: this.TERMINAL_OUTPUT.CURRENT_GRAPHIC_RENDITION[c].style
            });
        } else this.graphicRenditionIndex[b] = [ {
            index: 0
        } ];
        return this.renderTimeout || (this.renderTimeout = setTimeout(function() {
            e.render(), e.renderTimeout = 0;
        }, 25)), a.substr(d.length, a.length);
    };
    var t = function() {
        this.TYPES = [ "\x1b[38;5;226m", "\x1b[38;5;226m", "\x1b[38;5;76m", "\x1b[38;5;51m", "\x1b[38;5;39m", "\x1b[38;5;111m", "\x1b[38;5;9m", "\x1b[38;5;180m", "\x1b[38;5;51m", "\x1b[0m" ], 
        this.SYNTAX_REGULAR_EXPRESSION = new RegExp('(\\/[a-z]+)|([\\[\\]\\{\\}\\(\\)\\-\\+\\*\\/_=])|("[^"]*")|([0-9]\\.?[0-9]*)|(%?[\\w\\.]+)|(\\${1,3}[\\w]+)|(\\^[\\w]+)|(#{2,3}[\\w]+)|(\\.{2}[\\w]+)|([\\w]+)', "g");
    };
    t.prototype.highlightSyntax = function(a) {
        var b = this;
        return a.replace(this.SYNTAX_REGULAR_EXPRESSION, function(a) {
            var c;
            for (c = 1; c < arguments.length - 1; c++) if (arguments[c]) return b.TYPES[c - 1] + a + "\x1b[0m";
            return a;
        });
    };
    var u = function() {
        if ("undefined" == typeof JSON) throw new Error("Browser does not support html5 local storage. Please, update your browser");
    };
    u.prototype.clear = function() {
        localStorage.clear();
    }, u.prototype.set = function(a, b) {
        localStorage.setItem(a, b);
    }, u.prototype.remove = function(a) {
        localStorage.removeItem(a);
    }, u.prototype.get = function(a) {
        return localStorage.getItem(a);
    };
}({}, function() {
    return this;
}());]]></CSP>
</Export>
